From b0cea1e3aefe6bb9f1ffa451bebc01a98e63d8ad Mon Sep 17 00:00:00 2001
From: Marco Mecchia <marco.mecchia@intel.com>
Date: Wed, 1 May 2019 17:52:34 +0100
Subject: [PATCH] Revert "Building three tasklist (POC approach)"

This reverts commit 1d596c2d011a17c96d5719fc8e6b3ec9b973d9b8.
---
 .../keembay/runtime_model/runtime_model.cpp   | 24 ++++---------------
 1 file changed, 5 insertions(+), 19 deletions(-)

diff --git a/src/target/keembay/runtime_model/runtime_model.cpp b/src/target/keembay/runtime_model/runtime_model.cpp
index 0ab0f6b2..78fc58db 100644
--- a/src/target/keembay/runtime_model/runtime_model.cpp
+++ b/src/target/keembay/runtime_model/runtime_model.cpp
@@ -312,28 +312,14 @@ std::unique_ptr<MVCNN::BinaryDataT> mv::RuntimeModel::buildBinaryDataT(Computati
 std::vector<std::unique_ptr<MVCNN::TaskListT>> mv::RuntimeModel::buildTaskListT(ComputationModel& cm, mv::Element& compilationDescriptor)
 {
     mv::OpModel om(cm);
-    mv::ControlModel controlModel(cm);
-    std::vector<std::unique_ptr<MVCNN::TaskListT>> toBuild = std::vector<std::unique_ptr<MVCNN::TaskListT>>(3);
+    std::vector<std::unique_ptr<MVCNN::TaskListT>> toBuild = std::vector<std::unique_ptr<MVCNN::TaskListT>>(1);
     toBuild[0] = std::unique_ptr<MVCNN::TaskListT>(new MVCNN::TaskListT());
-    toBuild[1] = std::unique_ptr<MVCNN::TaskListT>(new MVCNN::TaskListT());
-    toBuild[2] = std::unique_ptr<MVCNN::TaskListT>(new MVCNN::TaskListT());
-
-    auto topologicallySortedOps = controlModel.topologicalSort();
 
-    for(auto vecIt = topologicallySortedOps.begin(); vecIt != topologicallySortedOps.end(); ++vecIt)
+    //Only Tasks in TaskLists
+    for(auto opIt = om.opBegin(); opIt != om.opEnd(); ++opIt)
     {
-        auto opIt = *vecIt;
-        std::string opType = opIt->getOpType();
-        //Only Tasks in TaskLists
-        if(opType.find("Task") != std::string::npos)
-        {
-            if(opType.find("DPU") != std::string::npos)
-                toBuild[0]->content.push_back(buildTaskT(cm, compilationDescriptor, opIt));
-            if(opType.find("DMA") != std::string::npos)
-                toBuild[1]->content.push_back(buildTaskT(cm, compilationDescriptor, opIt));
-            if(opType.find("Controller") != std::string::npos)
-                toBuild[2]->content.push_back(buildTaskT(cm, compilationDescriptor, opIt));
-        }
+        if(opIt->getOpType().find("Task") != std::string::npos)
+            toBuild[0]->content.push_back(buildTaskT(cm, compilationDescriptor, opIt));
     }
 
     return toBuild;
-- 
2.17.1

