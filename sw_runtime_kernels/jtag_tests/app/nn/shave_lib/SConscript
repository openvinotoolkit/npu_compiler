# Importing all previously exported global scons variables
Import('*')

cores_list = []
if 'y' in default_env.subst("$CONFIG_HAS_LRT_SRCS"):
    cores_list.append('lrt')
if 'y' in default_env.subst("$CONFIG_HAS_LNN_SRCS"):
    cores_list.append('lnn')

if cores_list:
    # Compiler includes path
    default_env.addSystemIncludes([default_env.Dir('inc/'), default_env.Dir('inc/layers/')], cores_list)
    # Sources
    default_env.addSystemSources(sourcesList = default_env.File(Glob('src/*.c*')),coresList = cores_list)
    default_env.addSystemSources(sourcesList = default_env.File(Glob('src/layers/*.c*')),coresList = cores_list)
    default_env.addSystemSources(sourcesList = default_env.File(Glob('src/ShaveElfMetadata/*.c*')),coresList = cores_list)

# Compiler defines
if 'y' in default_env.subst("$CONFIG_ENABLE_CUSTOM_KERNEL_PERF_COUNTERS"):
    default_env.addCompilerDefines('ENABLE_CUSTOM_KERNEL_PERF_COUNTERS', ['lrt', 'lnn', 'shave'])

if 'y' in default_env.subst("$CONFIG_NN_DISABLE_UPA_SHAVE_L2_FOR_NN_DEMO_FIRMWARE"):
    default_env.addCompilerDefines('DNN_DISABLE_UPA_SHAVE_L2_FOR_NN_DEMO_FIRMWARE', ['lrt'])

default_env.addCompilerDefines(['NN_PRE_ALPHA_UPA_SHAVE_TARGET={}'.format(str(default_env.subst("$CONFIG_NN_PRE_ALPHA_UPA_SHAVE_TARGET"))), 'DISPATCHER_OS'], ['lrt'])

# Compiler includes path
default_env.addSystemIncludes([default_env.Dir('inc/'), default_env.Dir('inc/layers/')], ['shave'])

SConscript(dirs=['shave'], exports=['default_env'])
