# Importing all previously exported global scons variables
Import('*')

cores_list = []
if 'y' in default_env.subst("$CONFIG_HAS_LRT_SRCS"):
    cores_list.append('lrt')
if 'y' in default_env.subst("$CONFIG_HAS_LNN_SRCS"):
    cores_list.append('lnn')
if 'y' in default_env.subst("$CONFIG_HAS_SHAVE_SRCS"):
    cores_list.append('shave')
if 'y' in default_env.subst("$CONFIG_HAS_SHAVE_NN_SRCS"):
    cores_list.append('shave_nn')

if cores_list:
    default_env.addSystemIncludes(default_env.Dir('inc/'), cores_list)
    default_env.addSystemSources(sourcesList=default_env.File(Glob('src/*.c*')), coresList=cores_list)
    if 'y' in default_env.subst("$CONFIG_TARGET_SOC_MA2490")
        default_env.addSystemSources(sourcesList=default_env.File(Glob('src/2490/*.c*')), coresList=cores_list)
    if 'y' in default_env.subst("$CONFIG_TARGET_SOC_MA2490_B0")
        default_env.addSystemSources(sourcesList=default_env.File(Glob('src/2490/*.c*')), coresList=cores_list)
    if 'y' in default_env.subst("$CONFIG_TARGET_SOC_3100")
        default_env.addSystemSources(sourcesList=default_env.File(Glob('src/2490/*.c*')), coresList=cores_list)
    if 'y' in default_env.subst("$CONFIG_TARGET_SOC_3600") or 'y' in default_env.subst("$CONFIG_TARGET_SOC_3710") or 'y' in default_env.subst("$CONFIG_TARGET_SOC_3720"):
        default_env.addSystemSources(sourcesList=default_env.File(Glob('src/3600/*.c*')), coresList=cores_list)

error_mapping = {'NONE':'0','FATAL':'1','ERROR':'2','WARN':'3','PERF':'4','INFO':'5','DEBUG':'6','ALL':'7'}

for error_type in error_mapping:
    if 'y' in default_env.subst('$CONFIG_NN_LOG_VERBOSITY_LRT_{type}'.format(type=error_type)):
        default_env.addCompilerDefines('NN_LOG_VERBOSITY={level}'.format(level=error_mapping[error_type]), ['lrt'])

    if 'y' in default_env.subst('$CONFIG_NN_LOG_VERBOSITY_LNN_{type}'.format(type=error_type)):
        default_env.addCompilerDefines('NN_LOG_VERBOSITY={level}'.format(level=error_mapping[error_type]), ['lnn'])

    if 'y' in default_env.subst('$CONFIG_NN_LOG_VERBOSITY_SVU_{type}'.format(type=error_type)):
        default_env.addCompilerDefines('NN_LOG_VERBOSITY={level}'.format(level=error_mapping[error_type]), ['shave'])

    if 'y' in default_env.subst('$CONFIG_NN_LOG_VERBOSITY_SNN_{type}'.format(type=error_type)):
        default_env.addCompilerDefines('NN_LOG_VERBOSITY={level}'.format(level=error_mapping[error_type]), ['shave_nn'])
