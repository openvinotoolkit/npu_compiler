mcmCompiler RC_WW29 is a release candidate intended for compiling the Top3 networks, viz. ResNet50, MobileNet V2, and Tiny Yolo V2.

Requisite dependencies:

- Fathom version 0.9.5 - https://github.com/movidius/Fathom/releases/tag/v0.9.5
- Runtime version 1.5.0 - https://github.com/movidius/mdk/releases/tag/NN_Runtime_v1.5.0
- Graphfile Schema version 3.11.2 - https://github.com/movidius/graphFile-schema/releases/tag/v3.11.2

To build the mcmCompiler:

Download the mcmCompiler source.

Install prerequisite libraries:

If you already have the latest version of pip and tensorflow then skip the first 2 commands. You may not need to explicitly define the proxies for pip, if you have that already set up.

    sudo pip3 install --upgrade pip --proxy=http://proxy-chain.intel.com:911/
    sudo pip3 install --upgrade tensorflow --proxy=http://proxy-chain.intel.com:911/
    sudo apt-get install libmetis-dev
    Sudo apt-get install dhex
    sudo pip3 install metis --user --proxy=http://proxy-chain.intel.com:911/
    sudo pip3 install flatbuffers --proxy=http://proxy-chain.intel.com:911/
    sudo pip3 install ordered_set
    sudo pip install --upgrade scikit-image
    sudo pip3 install scikit-learn
    sudo pip3 install tabulate
    pip3 install onnx


Set environment variables

Again we are using $HOME/mywork as an example, please set the vars below to the specific dirs you created and cloned to.

    export MDK_ROOT=$HOME/mywork/mdk
    export MDK_HOME=$HOME/mywork/mdk

    export MCM_HOME="${WORK_ROOT}/mcmcompiler"

    export MCM_ROOT="${MCM_HOME}"
    export NZOO_ROOT=$HOME/mywork/migNetworkZoo
    export LD_LIBRARY_PATH=$HOME/mywork/mcmcompiler/build/lib
    export FLATBUFFERS=$HOME/mywork/mdk/projects/Fathom/lib/graphFile-schema/flatbuffers
    export PATH=$PATH:$HOME/mywork/mdk/projects/Fathom/lib/graphFile-schema/flatbuffers
    export GRAPHFILE=$HOME/mywork/mdk/projects/Fathom/lib/graphFile-schema
    export MV_TOOLS_DIR=$HOME/mywork/mdk/tools
    export MV_TOOLS_VERSION=Latest_195458
    export LD_LIBRARY_PATH=/usr/local/lib:${MCM_HOME}/build/lib

Compile the mcmCompiler:

    cd $MCM_HOME
    git checkout <TAG>
    mkdir build && cd build
    cmake ..
    make -j8


Compile Blob file

    Tflite models can be found in migNetworkZoo
        https://github.com/movidius/migNetworkZoo/internal/modified_networks/
    
    Make sure you're on the correct release of Fathom (v0.9.5)
    Cd to $MDK_ROOT/projects/Fathom/src2
    Compile blob file, again paths to *.tflite file and *.jpeg are relative to our example directory, please fix your paths to point to where you actually have these files on your disk.
        python3 Fathom.py generate --network-description <network path and name>  --kmb --cpp --nDPU 5 --nClusters 1 --cmx 4096 --verbose --comp-descriptor $MCM_HOME/config/compilation/debug_ma2490.json
        You will find the blob, vpu2.blob and all other generated files in /output (mywork/mdk/projects/Fathom/src2/output
    Generates 3 files of interest:
        expected_result_sim.dat
        input.dat
        vpu2.blob
    Rename vpu2.blob to test.blob
    input.dat to input-0.bin

Run Network - on FPGA

    cd to your mdk dir, example:
        Cd $MDK_ROOT/testApps/components/NeuralNet/InferenceRuntimeDemo
        Copy test.blob and input-0.bin to this folder
            cp $MDK_ROOT/projects/Fathom/src2/output/test.blob .
            cp $MDK_ROOT/projects/Fathom/src2/output/input-0.bin .
        make run -j8 srvIP=<FPGA>
            This creates output-0.bin


Trained networks can be found on MigNetworkZoo, here:

1) mobilenet V2: https://github.com/movidius/migNetworkZoo/blob/master/internal/modified_networks/MobileNet_v2/mobilenet_v2_050.tflite
2) TinyYolo V2: https://github.com/movidius/migNetworkZoo/blob/master/internal/modified_networks/YoloV2/full_networks/tiny-yolov2-128output.tflite
3) Resnet50: https://github.com/movidius/migNetworkZoo/blob/master/internal/modified_networks/Resnet_50/full_networks/resnet50_224_new.tflite

To compile the blobs for the trained Top3 networks using mcmCompiler, use the following commands:


1) MobileNet V2: python3 -u Fathom.py generate --network-description $TRAINED_NETWORKS/mobilenet_v2_050.tflite  --kmb --cpp --nDPU 1 --nClusters 1 --nWorkloads 1  --comp-descriptor $MCM_HOME/config/compilation/mobilenet_streaming_trained.json  --cmx 360000 --emulator

2) Tiny Yolo V2: python3 -u Fathom.py generate --network-description $TRAINED_NETWORKS/tiny-yolov2-128output.tflite  --kmb --cpp --nDPU 1 --nClusters 1 --nWorkloads 1  --comp-descriptor $MCM_HOME/debug_ma2490_tiny-yolo-900kb-trained-model.json  --cmx 360000 --emulator

3)  python3 -u Fathom.py generate --network-description $TRAINED_NETWORKS/resnet50_224_new.tflite --kmb --nDPU 1 --nClusters 1 --nWorkloads 1 --cmx  3670016 --emulator   --cpp  --comp-descriptor /home/ecopty/work/NCS/mcmCompiler//config/compilation/resnet50_trained_model_streaming.json  | tee resnet.txt
