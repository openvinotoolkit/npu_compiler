<?xml version="1.0" ?>

<!--
RUN: vpux-translate -import-IE %s | FileCheck %s
-->

<net name="SoftMax" version="10">
	<layers>
		<layer id="0" name="data" type="Parameter" version="opset1">
			<data element_type="f32" shape="1,1000"/>
			<output>
				<port id="0" precision="FP32">
					<dim>1</dim>
					<dim>1000</dim>
				</port>
			</output>
		</layer>
		<layer id="1" name="prob" type="SoftMax" version="opset1">
			<data axis="1"/>
			<input>
				<port id="0">
					<dim>1</dim>
					<dim>1000</dim>
				</port>
			</input>
			<output>
				<port id="1" precision="FP32">
					<dim>1</dim>
					<dim>1000</dim>
				</port>
			</output>
		</layer>
		<layer id="2" name="prob/sink_port_0" type="Result" version="opset1">
			<input>
				<port id="0">
					<dim>1</dim>
					<dim>1000</dim>
				</port>
			</input>
		</layer>
	</layers>
	<edges>
		<edge from-layer="0" from-port="0" to-layer="1" to-port="0"/>
		<edge from-layer="1" from-port="1" to-layer="2" to-port="0"/>
	</edges>
</net>

<!--
CHECK:      module {
CHECK-NEXT:   IE.CNNNetwork "SoftMax" at @main inputsInfo : {
CHECK-NEXT:     IE.DataInfo "data", f32, "NC"
CHECK-NEXT:   } outputsInfo : {
CHECK-NEXT:     IE.DataInfo "prob", f32, "NC"
CHECK-NEXT:   }
CHECK-NEXT:   func @main(%arg0: tensor<1x1000xf32>) -> tensor<1x1000xf32> {
CHECK-NEXT:     %prob = IE.SoftMax(%arg0) {axisInd = 1 : i32} : tensor<1x1000xf32> -> tensor<1x1000xf32>
CHECK-NEXT:     return %prob : tensor<1x1000xf32>
CHECK-NEXT:   }
CHECK-NEXT: }
-->
