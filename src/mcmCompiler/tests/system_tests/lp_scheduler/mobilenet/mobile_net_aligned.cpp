// Network source: migNetworkZoo/internal/full_networks/IRv10/WW22/vd_kmb_models_public_ww22/mobilenet-v1-1.0-224/caffe/FP16-INT8

#include "include/mcm/compiler/compilation_unit.hpp"
#include "include/mcm/utils/data_generator.hpp"
#include "include/mcm/op_model.hpp"
#include "include/mcm/utils/hardware_tests.hpp"

#include <iostream>
#include <fstream>
#include <unistd.h>

struct InputParams {

    InputParams() : comp_descriptor_(NULL) {}

    bool parse_args(int argc, char **argv) {
        int opt;
        char const * const options = "d:";

        while ((opt = getopt(argc, argv, options)) != -1) {
            switch (opt) {
            case 'd':
                comp_descriptor_ = optarg;
                break;
            default:
                usage();
                return false;
            }
        }

        if (!comp_descriptor_) { 
            usage();
            return false; 
        }
        return true;
    }

    void usage() const {
      fprintf(stderr, "./mobile_net -d {comp_descriptor}\n");
    }

    const char *comp_descriptor_;
};  // struct InputParams //

void build_MOBILENET(mv::OpModel& model)
{
    using namespace mv;

    const auto data_0 = model.input("data", {224, 224, 3, 1}, mv::DType("UInt8"), mv::Order("NHWC"), true);
    const auto fc7_WithoutBiases_fq_weights_1_Copy_out_low1915_const_0 = model.constant("fc7/WithoutBiases/fq_weights_1/Copy/out_low1915_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto fc7_WithoutBiases_fq_weights_1_Copy_out_high1916_const_0 = model.constant("fc7/WithoutBiases/fq_weights_1/Copy/out_high1916_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv6_sep_fq_weights_1_Copy_out_low2011_const_0 = model.constant("conv6/sep/fq_weights_1/Copy/out_low2011_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv6_sep_fq_weights_1_Copy_out_high2012_const_0 = model.constant("conv6/sep/fq_weights_1/Copy/out_high2012_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv6_dw_fq_weights_1_Copy_out_low1995_const_0 = model.constant("conv6/dw/fq_weights_1/Copy/out_low1995_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv6_dw_fq_weights_1_Copy_out_high1996_const_0 = model.constant("conv6/dw/fq_weights_1/Copy/out_high1996_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_6_sep_fq_weights_1_Copy_out_low1947_const_0 = model.constant("conv5_6/sep/fq_weights_1/Copy/out_low1947_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_6_sep_fq_weights_1_Copy_out_high1948_const_0 = model.constant("conv5_6/sep/fq_weights_1/Copy/out_high1948_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_6_dw_fq_weights_1_Copy_out_low2083_const_0 = model.constant("conv5_6/dw/fq_weights_1/Copy/out_low2083_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_6_dw_fq_weights_1_Copy_out_high2084_const_0 = model.constant("conv5_6/dw/fq_weights_1/Copy/out_high2084_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_5_sep_fq_weights_1_Copy_out_low2091_const_0 = model.constant("conv5_5/sep/fq_weights_1/Copy/out_low2091_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_5_sep_fq_weights_1_Copy_out_high2092_const_0 = model.constant("conv5_5/sep/fq_weights_1/Copy/out_high2092_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_5_dw_fq_weights_1_Copy_out_low2099_const_0 = model.constant("conv5_5/dw/fq_weights_1/Copy/out_low2099_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_5_dw_fq_weights_1_Copy_out_high2100_const_0 = model.constant("conv5_5/dw/fq_weights_1/Copy/out_high2100_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_4_sep_fq_weights_1_Copy_out_low1971_const_0 = model.constant("conv5_4/sep/fq_weights_1/Copy/out_low1971_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_4_sep_fq_weights_1_Copy_out_high1972_const_0 = model.constant("conv5_4/sep/fq_weights_1/Copy/out_high1972_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_4_dw_fq_weights_1_Copy_out_low2123_const_0 = model.constant("conv5_4/dw/fq_weights_1/Copy/out_low2123_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_4_dw_fq_weights_1_Copy_out_high2124_const_0 = model.constant("conv5_4/dw/fq_weights_1/Copy/out_high2124_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_3_sep_fq_weights_1_Copy_out_low2059_const_0 = model.constant("conv5_3/sep/fq_weights_1/Copy/out_low2059_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_3_sep_fq_weights_1_Copy_out_high2060_const_0 = model.constant("conv5_3/sep/fq_weights_1/Copy/out_high2060_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_3_dw_fq_weights_1_Copy_out_low1923_const_0 = model.constant("conv5_3/dw/fq_weights_1/Copy/out_low1923_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_3_dw_fq_weights_1_Copy_out_high1924_const_0 = model.constant("conv5_3/dw/fq_weights_1/Copy/out_high1924_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_2_sep_fq_weights_1_Copy_out_low1955_const_0 = model.constant("conv5_2/sep/fq_weights_1/Copy/out_low1955_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_2_sep_fq_weights_1_Copy_out_high1956_const_0 = model.constant("conv5_2/sep/fq_weights_1/Copy/out_high1956_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_2_dw_fq_weights_1_Copy_out_low2107_const_0 = model.constant("conv5_2/dw/fq_weights_1/Copy/out_low2107_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_2_dw_fq_weights_1_Copy_out_high2108_const_0 = model.constant("conv5_2/dw/fq_weights_1/Copy/out_high2108_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_1_sep_fq_weights_1_Copy_out_low2067_const_0 = model.constant("conv5_1/sep/fq_weights_1/Copy/out_low2067_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_1_sep_fq_weights_1_Copy_out_high2068_const_0 = model.constant("conv5_1/sep/fq_weights_1/Copy/out_high2068_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_1_dw_fq_weights_1_Copy_out_low2003_const_0 = model.constant("conv5_1/dw/fq_weights_1/Copy/out_low2003_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_1_dw_fq_weights_1_Copy_out_high2004_const_0 = model.constant("conv5_1/dw/fq_weights_1/Copy/out_high2004_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv4_2_sep_fq_weights_1_Copy_out_low2115_const_0 = model.constant("conv4_2/sep/fq_weights_1/Copy/out_low2115_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv4_2_sep_fq_weights_1_Copy_out_high2116_const_0 = model.constant("conv4_2/sep/fq_weights_1/Copy/out_high2116_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv4_2_dw_fq_weights_1_Copy_out_low2075_const_0 = model.constant("conv4_2/dw/fq_weights_1/Copy/out_low2075_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv4_2_dw_fq_weights_1_Copy_out_high2076_const_0 = model.constant("conv4_2/dw/fq_weights_1/Copy/out_high2076_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv4_1_sep_fq_weights_1_Copy_out_low2019_const_0 = model.constant("conv4_1/sep/fq_weights_1/Copy/out_low2019_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv4_1_sep_fq_weights_1_Copy_out_high2020_const_0 = model.constant("conv4_1/sep/fq_weights_1/Copy/out_high2020_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv4_1_dw_fq_weights_1_Copy_out_low2043_const_0 = model.constant("conv4_1/dw/fq_weights_1/Copy/out_low2043_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv4_1_dw_fq_weights_1_Copy_out_high2044_const_0 = model.constant("conv4_1/dw/fq_weights_1/Copy/out_high2044_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv3_2_sep_fq_weights_1_Copy_out_low1987_const_0 = model.constant("conv3_2/sep/fq_weights_1/Copy/out_low1987_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv3_2_sep_fq_weights_1_Copy_out_high1988_const_0 = model.constant("conv3_2/sep/fq_weights_1/Copy/out_high1988_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv3_2_dw_fq_weights_1_Copy_out_low1963_const_0 = model.constant("conv3_2/dw/fq_weights_1/Copy/out_low1963_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv3_2_dw_fq_weights_1_Copy_out_high1964_const_0 = model.constant("conv3_2/dw/fq_weights_1/Copy/out_high1964_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv3_1_sep_fq_weights_1_Copy_out_low2035_const_0 = model.constant("conv3_1/sep/fq_weights_1/Copy/out_low2035_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv3_1_sep_fq_weights_1_Copy_out_high2036_const_0 = model.constant("conv3_1/sep/fq_weights_1/Copy/out_high2036_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv3_1_dw_fq_weights_1_Copy_out_low1979_const_0 = model.constant("conv3_1/dw/fq_weights_1/Copy/out_low1979_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv3_1_dw_fq_weights_1_Copy_out_high1980_const_0 = model.constant("conv3_1/dw/fq_weights_1/Copy/out_high1980_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv2_2_sep_fq_weights_1_Copy_out_low2027_const_0 = model.constant("conv2_2/sep/fq_weights_1/Copy/out_low2027_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv2_2_sep_fq_weights_1_Copy_out_high2028_const_0 = model.constant("conv2_2/sep/fq_weights_1/Copy/out_high2028_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv2_2_dw_fq_weights_1_Copy_out_low1907_const_0 = model.constant("conv2_2/dw/fq_weights_1/Copy/out_low1907_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv2_2_dw_fq_weights_1_Copy_out_high1908_const_0 = model.constant("conv2_2/dw/fq_weights_1/Copy/out_high1908_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv2_1_sep_fq_weights_1_Copy_out_low2051_const_0 = model.constant("conv2_1/sep/fq_weights_1/Copy/out_low2051_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv2_1_sep_fq_weights_1_Copy_out_high2052_const_0 = model.constant("conv2_1/sep/fq_weights_1/Copy/out_high2052_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv2_1_dw_fq_weights_1_Copy_out_low1939_const_0 = model.constant("conv2_1/dw/fq_weights_1/Copy/out_low1939_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv2_1_dw_fq_weights_1_Copy_out_high1940_const_0 = model.constant("conv2_1/dw/fq_weights_1/Copy/out_high1940_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv1_fq_weights_1_Copy_out_low1931_const_0 = model.constant("conv1/fq_weights_1/Copy/out_low1931_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv1_fq_weights_1_Copy_out_high1932_const_0 = model.constant("conv1/fq_weights_1/Copy/out_high1932_const", {254.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2976_0 = model.constant("Constant_2976", mv::utils::generateSequence<double>(1000), {1000}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2975_0 = model.constant("Constant_2975", mv::utils::generateSequence<double>(1024), {1024}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2974_0 = model.constant("Constant_2974", mv::utils::generateSequence<double>(1024), {1024}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2973_0 = model.constant("Constant_2973", mv::utils::generateSequence<double>(1024), {1024}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2972_0 = model.constant("Constant_2972", mv::utils::generateSequence<double>(512), {512}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2971_0 = model.constant("Constant_2971", mv::utils::generateSequence<double>(512), {512}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2970_0 = model.constant("Constant_2970", mv::utils::generateSequence<double>(512), {512}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2969_0 = model.constant("Constant_2969", mv::utils::generateSequence<double>(512), {512}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2968_0 = model.constant("Constant_2968", mv::utils::generateSequence<double>(512), {512}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2967_0 = model.constant("Constant_2967", mv::utils::generateSequence<double>(512), {512}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2966_0 = model.constant("Constant_2966", mv::utils::generateSequence<double>(512), {512}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2965_0 = model.constant("Constant_2965", mv::utils::generateSequence<double>(512), {512}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2964_0 = model.constant("Constant_2964", mv::utils::generateSequence<double>(512), {512}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2963_0 = model.constant("Constant_2963", mv::utils::generateSequence<double>(512), {512}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2962_0 = model.constant("Constant_2962", mv::utils::generateSequence<double>(512), {512}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2961_0 = model.constant("Constant_2961", mv::utils::generateSequence<double>(512), {512}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2960_0 = model.constant("Constant_2960", mv::utils::generateSequence<double>(256), {256}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2959_0 = model.constant("Constant_2959", mv::utils::generateSequence<double>(256), {256}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2958_0 = model.constant("Constant_2958", mv::utils::generateSequence<double>(256), {256}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2957_0 = model.constant("Constant_2957", mv::utils::generateSequence<double>(256), {256}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2956_0 = model.constant("Constant_2956", mv::utils::generateSequence<double>(128), {128}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2955_0 = model.constant("Constant_2955", mv::utils::generateSequence<double>(128), {128}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2954_0 = model.constant("Constant_2954", mv::utils::generateSequence<double>(128), {128}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2953_0 = model.constant("Constant_2953", mv::utils::generateSequence<double>(128), {128}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2952_0 = model.constant("Constant_2952", mv::utils::generateSequence<double>(64), {64}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2951_0 = model.constant("Constant_2951", mv::utils::generateSequence<double>(64), {64}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2950_0 = model.constant("Constant_2950", mv::utils::generateSequence<double>(32), {32}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2949_0 = model.constant("Constant_2949", mv::utils::generateSequence<double>(32), {32}, mv::DType("Float32"), mv::Order("W"));
    const auto Constant_2835_0 = model.constant("Constant_2835", mv::utils::generateSequence<double>(1*1*1024*1000), {1, 1, 1024, 1000}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2834_0 = model.constant("Constant_2834", mv::utils::generateSequence<double>(1*1*1024*1024), {1, 1, 1024, 1024}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2833_0 = model.constant("Constant_2833", mv::utils::generateSequence<double>(3*3*1*1024), {3, 3, 1024, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2832_0 = model.constant("Constant_2832", mv::utils::generateSequence<double>(1*1*512*1024), {1, 1, 512, 1024}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2831_0 = model.constant("Constant_2831", mv::utils::generateSequence<double>(3*3*1*512), {3, 3, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2830_0 = model.constant("Constant_2830", mv::utils::generateSequence<double>(1*1*512*512), {1, 1, 512, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2829_0 = model.constant("Constant_2829", mv::utils::generateSequence<double>(3*3*1*512), {3, 3, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2828_0 = model.constant("Constant_2828", mv::utils::generateSequence<double>(1*1*512*512), {1, 1, 512, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2827_0 = model.constant("Constant_2827", mv::utils::generateSequence<double>(3*3*1*512), {3, 3, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2826_0 = model.constant("Constant_2826", mv::utils::generateSequence<double>(1*1*512*512), {1, 1, 512, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2825_0 = model.constant("Constant_2825", mv::utils::generateSequence<double>(3*3*1*512), {3, 3, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2824_0 = model.constant("Constant_2824", mv::utils::generateSequence<double>(1*1*512*512), {1, 1, 512, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2823_0 = model.constant("Constant_2823", mv::utils::generateSequence<double>(3*3*1*512), {3, 3, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2822_0 = model.constant("Constant_2822", mv::utils::generateSequence<double>(1*1*512*512), {1, 1, 512, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2821_0 = model.constant("Constant_2821", mv::utils::generateSequence<double>(3*3*1*512), {3, 3, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2820_0 = model.constant("Constant_2820", mv::utils::generateSequence<double>(1*1*256*512), {1, 1, 256, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2819_0 = model.constant("Constant_2819", mv::utils::generateSequence<double>(3*3*1*256), {3, 3, 256, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2818_0 = model.constant("Constant_2818", mv::utils::generateSequence<double>(1*1*256*256), {1, 1, 256, 256}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2817_0 = model.constant("Constant_2817", mv::utils::generateSequence<double>(3*3*1*256), {3, 3, 256, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2816_0 = model.constant("Constant_2816", mv::utils::generateSequence<double>(1*1*128*256), {1, 1, 128, 256}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2815_0 = model.constant("Constant_2815", mv::utils::generateSequence<double>(3*3*1*128), {3, 3, 128, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2814_0 = model.constant("Constant_2814", mv::utils::generateSequence<double>(1*1*128*128), {1, 1, 128, 128}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2813_0 = model.constant("Constant_2813", mv::utils::generateSequence<double>(3*3*1*128), {3, 3, 128, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2812_0 = model.constant("Constant_2812", mv::utils::generateSequence<double>(1*1*64*128), {1, 1, 64, 128}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2811_0 = model.constant("Constant_2811", mv::utils::generateSequence<double>(3*3*1*64), {3, 3, 64, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2810_0 = model.constant("Constant_2810", mv::utils::generateSequence<double>(1*1*32*64), {1, 1, 32, 64}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2809_0 = model.constant("Constant_2809", mv::utils::generateSequence<double>(3*3*1*32), {3, 3, 32, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_2808_0 = model.constant("Constant_2808", mv::utils::generateSequence<double>(3*3*3*32), {3, 3, 3, 32}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto Constant_112_0 = model.constant("", {0.016998, 0.016998, 0.016998}, {3}, mv::DType("Float32"), mv::Order("W"));
    const auto Add__Fused_Add__0 = model.scale("Add_/Fused_Add_", data_0, Constant_112_0);
    const auto Constant_113_0 = model.constant("", {-1.766602, -1.985352, -2.103516}, {3}, mv::DType("Float32"), mv::Order("W"));
    const auto Add__Fused_Add__bias_0 = model.bias("Add_/Fused_Add_:bias", Add__Fused_Add__0, Constant_113_0);
    const auto _9971001_const_0 = model.constant("9971001_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _9961000_const_0 = model.constant("9961000_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv5_4_sep_fq_weights_1_0 = model.fakeQuantize("conv5_4/sep/fq_weights_1", Constant_2828_0, conv5_4_sep_fq_weights_1_Copy_out_low1971_const_0, conv5_4_sep_fq_weights_1_Copy_out_high1972_const_0, _9961000_const_0, _9971001_const_0, 255);
    const auto _987991_const_0 = model.constant("987991_const", {4.433594}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _986990_const_0 = model.constant("986990_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _985989_const_0 = model.constant("985989_const", {4.433594}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _984988_const_0 = model.constant("984988_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _977981_const_0 = model.constant("977981_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _976980_const_0 = model.constant("976980_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv5_2_sep_fq_weights_1_0 = model.fakeQuantize("conv5_2/sep/fq_weights_1", Constant_2824_0, conv5_2_sep_fq_weights_1_Copy_out_low1955_const_0, conv5_2_sep_fq_weights_1_Copy_out_high1956_const_0, _976980_const_0, _977981_const_0, 255);
    const auto _967971_const_0 = model.constant("967971_const", {2.507812}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _966970_const_0 = model.constant("966970_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _965969_const_0 = model.constant("965969_const", {2.507812}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _964968_const_0 = model.constant("964968_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _957961_const_0 = model.constant("957961_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _956960_const_0 = model.constant("956960_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv5_4_dw_fq_weights_1_0 = model.fakeQuantize("conv5_4/dw/fq_weights_1", Constant_2827_0, conv5_4_dw_fq_weights_1_Copy_out_low2123_const_0, conv5_4_dw_fq_weights_1_Copy_out_high2124_const_0, _956960_const_0, _957961_const_0, 255);
    const auto _947951_const_0 = model.constant("947951_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _946950_const_0 = model.constant("946950_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _945949_const_0 = model.constant("945949_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _944948_const_0 = model.constant("944948_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _937941_const_0 = model.constant("937941_const", mv::utils::generateSequence<double>(1*1*1*128), {1, 1, 1, 128}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _936940_const_0 = model.constant("936940_const", mv::utils::generateSequence<double>(1*1*1*128), {1, 1, 1, 128}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv3_1_dw_fq_weights_1_0 = model.fakeQuantize("conv3_1/dw/fq_weights_1", Constant_2813_0, conv3_1_dw_fq_weights_1_Copy_out_low1979_const_0, conv3_1_dw_fq_weights_1_Copy_out_high1980_const_0, _936940_const_0, _937941_const_0, 255);
    const auto _927931_const_0 = model.constant("927931_const", mv::utils::generateSequence<double>(1*1*128*1), {1, 1, 128, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _926930_const_0 = model.constant("926930_const", mv::utils::generateSequence<double>(1*1*128*1), {1, 1, 128, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _925929_const_0 = model.constant("925929_const", mv::utils::generateSequence<double>(1*1*128*1), {1, 1, 128, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _924928_const_0 = model.constant("924928_const", mv::utils::generateSequence<double>(1*1*128*1), {1, 1, 128, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _917921_const_0 = model.constant("917921_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _916920_const_0 = model.constant("916920_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv5_1_dw_fq_weights_1_0 = model.fakeQuantize("conv5_1/dw/fq_weights_1", Constant_2821_0, conv5_1_dw_fq_weights_1_Copy_out_low2003_const_0, conv5_1_dw_fq_weights_1_Copy_out_high2004_const_0, _916920_const_0, _917921_const_0, 255);
    const auto _907911_const_0 = model.constant("907911_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _906910_const_0 = model.constant("906910_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _905909_const_0 = model.constant("905909_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _904908_const_0 = model.constant("904908_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _897901_const_0 = model.constant("897901_const", mv::utils::generateSequence<double>(1*1*1*128), {1, 1, 1, 128}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _896900_const_0 = model.constant("896900_const", mv::utils::generateSequence<double>(1*1*1*128), {1, 1, 1, 128}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv3_1_sep_fq_weights_1_0 = model.fakeQuantize("conv3_1/sep/fq_weights_1", Constant_2814_0, conv3_1_sep_fq_weights_1_Copy_out_low2035_const_0, conv3_1_sep_fq_weights_1_Copy_out_high2036_const_0, _896900_const_0, _897901_const_0, 255);
    const auto _887891_const_0 = model.constant("887891_const", {3.357422}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _886890_const_0 = model.constant("886890_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _885889_const_0 = model.constant("885889_const", {3.357422}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _884888_const_0 = model.constant("884888_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _877881_const_0 = model.constant("877881_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _876880_const_0 = model.constant("876880_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv5_2_dw_fq_weights_1_0 = model.fakeQuantize("conv5_2/dw/fq_weights_1", Constant_2823_0, conv5_2_dw_fq_weights_1_Copy_out_low2107_const_0, conv5_2_dw_fq_weights_1_Copy_out_high2108_const_0, _876880_const_0, _877881_const_0, 255);
    const auto _867871_const_0 = model.constant("867871_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _866870_const_0 = model.constant("866870_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _865869_const_0 = model.constant("865869_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _864868_const_0 = model.constant("864868_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _857861_const_0 = model.constant("857861_const", mv::utils::generateSequence<double>(1*1*1*32), {1, 1, 1, 32}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _856860_const_0 = model.constant("856860_const", mv::utils::generateSequence<double>(1*1*1*32), {1, 1, 1, 32}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv2_1_dw_fq_weights_1_0 = model.fakeQuantize("conv2_1/dw/fq_weights_1", Constant_2809_0, conv2_1_dw_fq_weights_1_Copy_out_low1939_const_0, conv2_1_dw_fq_weights_1_Copy_out_high1940_const_0, _856860_const_0, _857861_const_0, 255);
    const auto _847851_const_0 = model.constant("847851_const", mv::utils::generateSequence<double>(1*1*32*1), {1, 1, 32, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _846850_const_0 = model.constant("846850_const", mv::utils::generateSequence<double>(1*1*32*1), {1, 1, 32, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _845849_const_0 = model.constant("845849_const", mv::utils::generateSequence<double>(1*1*32*1), {1, 1, 32, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _844848_const_0 = model.constant("844848_const", mv::utils::generateSequence<double>(1*1*32*1), {1, 1, 32, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _837841_const_0 = model.constant("837841_const", mv::utils::generateSequence<double>(1*1*1*256), {1, 1, 1, 256}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _836840_const_0 = model.constant("836840_const", mv::utils::generateSequence<double>(1*1*1*256), {1, 1, 1, 256}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv3_2_sep_fq_weights_1_0 = model.fakeQuantize("conv3_2/sep/fq_weights_1", Constant_2816_0, conv3_2_sep_fq_weights_1_Copy_out_low1987_const_0, conv3_2_sep_fq_weights_1_Copy_out_high1988_const_0, _836840_const_0, _837841_const_0, 255);
    const auto _827831_const_0 = model.constant("827831_const", {2.328125}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _826830_const_0 = model.constant("826830_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _825829_const_0 = model.constant("825829_const", {2.328125}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _824828_const_0 = model.constant("824828_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _817821_const_0 = model.constant("817821_const", mv::utils::generateSequence<double>(1*1*1*256), {1, 1, 1, 256}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _816820_const_0 = model.constant("816820_const", mv::utils::generateSequence<double>(1*1*1*256), {1, 1, 1, 256}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv4_1_dw_fq_weights_1_0 = model.fakeQuantize("conv4_1/dw/fq_weights_1", Constant_2817_0, conv4_1_dw_fq_weights_1_Copy_out_low2043_const_0, conv4_1_dw_fq_weights_1_Copy_out_high2044_const_0, _816820_const_0, _817821_const_0, 255);
    const auto _807811_const_0 = model.constant("807811_const", mv::utils::generateSequence<double>(1*1*256*1), {1, 1, 256, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _806810_const_0 = model.constant("806810_const", mv::utils::generateSequence<double>(1*1*256*1), {1, 1, 256, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _805809_const_0 = model.constant("805809_const", mv::utils::generateSequence<double>(1*1*256*1), {1, 1, 256, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _804808_const_0 = model.constant("804808_const", mv::utils::generateSequence<double>(1*1*256*1), {1, 1, 256, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _797801_const_0 = model.constant("797801_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _796800_const_0 = model.constant("796800_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv5_3_dw_fq_weights_1_0 = model.fakeQuantize("conv5_3/dw/fq_weights_1", Constant_2825_0, conv5_3_dw_fq_weights_1_Copy_out_low1923_const_0, conv5_3_dw_fq_weights_1_Copy_out_high1924_const_0, _796800_const_0, _797801_const_0, 255);
    const auto _787791_const_0 = model.constant("787791_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _786790_const_0 = model.constant("786790_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _785789_const_0 = model.constant("785789_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _784788_const_0 = model.constant("784788_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _777781_const_0 = model.constant("777781_const", {12.312500}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _776780_const_0 = model.constant("776780_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _775779_const_0 = model.constant("775779_const", {12.312500}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _774778_const_0 = model.constant("774778_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _767771_const_0 = model.constant("767771_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _766770_const_0 = model.constant("766770_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv5_5_sep_fq_weights_1_0 = model.fakeQuantize("conv5_5/sep/fq_weights_1", Constant_2830_0, conv5_5_sep_fq_weights_1_Copy_out_low2091_const_0, conv5_5_sep_fq_weights_1_Copy_out_high2092_const_0, _766770_const_0, _767771_const_0, 255);
    const auto _757761_const_0 = model.constant("757761_const", {4.582031}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _756760_const_0 = model.constant("756760_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _755759_const_0 = model.constant("755759_const", {4.582031}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _754758_const_0 = model.constant("754758_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _747751_const_0 = model.constant("747751_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _746750_const_0 = model.constant("746750_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv5_6_dw_fq_weights_1_0 = model.fakeQuantize("conv5_6/dw/fq_weights_1", Constant_2831_0, conv5_6_dw_fq_weights_1_Copy_out_low2083_const_0, conv5_6_dw_fq_weights_1_Copy_out_high2084_const_0, _746750_const_0, _747751_const_0, 255);
    const auto _737741_const_0 = model.constant("737741_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _736740_const_0 = model.constant("736740_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _735739_const_0 = model.constant("735739_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _734738_const_0 = model.constant("734738_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _727731_const_0 = model.constant("727731_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _726730_const_0 = model.constant("726730_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv5_5_dw_fq_weights_1_0 = model.fakeQuantize("conv5_5/dw/fq_weights_1", Constant_2829_0, conv5_5_dw_fq_weights_1_Copy_out_low2099_const_0, conv5_5_dw_fq_weights_1_Copy_out_high2100_const_0, _726730_const_0, _727731_const_0, 255);
    const auto _717721_const_0 = model.constant("717721_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _716720_const_0 = model.constant("716720_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _715719_const_0 = model.constant("715719_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _714718_const_0 = model.constant("714718_const", mv::utils::generateSequence<double>(1*1*512*1), {1, 1, 512, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _707711_const_0 = model.constant("707711_const", mv::utils::generateSequence<double>(1*1*1*1000), {1, 1, 1, 1000}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _706710_const_0 = model.constant("706710_const", mv::utils::generateSequence<double>(1*1*1*1000), {1, 1, 1, 1000}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto fc7_WithoutBiases_fq_weights_1_0 = model.fakeQuantize("fc7/WithoutBiases/fq_weights_1", Constant_2835_0, fc7_WithoutBiases_fq_weights_1_Copy_out_low1915_const_0, fc7_WithoutBiases_fq_weights_1_Copy_out_high1916_const_0, _706710_const_0, _707711_const_0, 255);
    const auto _697701_const_0 = model.constant("697701_const", {4.441406}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _696700_const_0 = model.constant("696700_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _695699_const_0 = model.constant("695699_const", {4.441406}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _694698_const_0 = model.constant("694698_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _687691_const_0 = model.constant("687691_const", mv::utils::generateSequence<double>(1*1*1*128), {1, 1, 1, 128}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _686690_const_0 = model.constant("686690_const", mv::utils::generateSequence<double>(1*1*1*128), {1, 1, 1, 128}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv3_2_dw_fq_weights_1_0 = model.fakeQuantize("conv3_2/dw/fq_weights_1", Constant_2815_0, conv3_2_dw_fq_weights_1_Copy_out_low1963_const_0, conv3_2_dw_fq_weights_1_Copy_out_high1964_const_0, _686690_const_0, _687691_const_0, 255);
    const auto _677681_const_0 = model.constant("677681_const", mv::utils::generateSequence<double>(1*1*128*1), {1, 1, 128, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _676680_const_0 = model.constant("676680_const", mv::utils::generateSequence<double>(1*1*128*1), {1, 1, 128, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _675679_const_0 = model.constant("675679_const", mv::utils::generateSequence<double>(1*1*128*1), {1, 1, 128, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _674678_const_0 = model.constant("674678_const", mv::utils::generateSequence<double>(1*1*128*1), {1, 1, 128, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _667671_const_0 = model.constant("667671_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _666670_const_0 = model.constant("666670_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv4_2_sep_fq_weights_1_0 = model.fakeQuantize("conv4_2/sep/fq_weights_1", Constant_2820_0, conv4_2_sep_fq_weights_1_Copy_out_low2115_const_0, conv4_2_sep_fq_weights_1_Copy_out_high2116_const_0, _666670_const_0, _667671_const_0, 255);
    const auto _657661_const_0 = model.constant("657661_const", {1.955078}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _656660_const_0 = model.constant("656660_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _655659_const_0 = model.constant("655659_const", {1.955078}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _654658_const_0 = model.constant("654658_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _647651_const_0 = model.constant("647651_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _646650_const_0 = model.constant("646650_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv5_3_sep_fq_weights_1_0 = model.fakeQuantize("conv5_3/sep/fq_weights_1", Constant_2826_0, conv5_3_sep_fq_weights_1_Copy_out_low2059_const_0, conv5_3_sep_fq_weights_1_Copy_out_high2060_const_0, _646650_const_0, _647651_const_0, 255);
    const auto _637641_const_0 = model.constant("637641_const", {3.099609}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _636640_const_0 = model.constant("636640_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _635639_const_0 = model.constant("635639_const", {3.099609}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _634638_const_0 = model.constant("634638_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _627631_const_0 = model.constant("627631_const", mv::utils::generateSequence<double>(1*1*1*32), {1, 1, 1, 32}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _626630_const_0 = model.constant("626630_const", mv::utils::generateSequence<double>(1*1*1*32), {1, 1, 1, 32}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv1_fq_weights_1_0 = model.fakeQuantize("conv1/fq_weights_1", Constant_2808_0, conv1_fq_weights_1_Copy_out_low1931_const_0, conv1_fq_weights_1_Copy_out_high1932_const_0, _626630_const_0, _627631_const_0, 255);
    const auto _617621_const_0 = model.constant("617621_const", {2.488281}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _616620_const_0 = model.constant("616620_const", {-2.507812}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _615619_const_0 = model.constant("615619_const", {2.488281}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _614618_const_0 = model.constant("614618_const", {-2.507812}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv1_fq_input_0_0 = model.fakeQuantize("conv1/fq_input_0", Add__Fused_Add__bias_0, _614618_const_0, _615619_const_0, _616620_const_0, _617621_const_0, 256);
    const auto conv1_bn_variance_Fused_Add__0 = model.conv("conv1/bn/variance/Fused_Add_", conv1_fq_input_0_0, conv1_fq_weights_1_0, {2, 2}, {1, 0, 1, 0}, 1, 1);
    const auto conv1_bn_variance_Fused_Add__bias_0 = model.bias("conv1/bn/variance/Fused_Add_:bias", conv1_bn_variance_Fused_Add__0, Constant_2949_0);
    const auto relu1_0 = model.relu("relu1", conv1_bn_variance_Fused_Add__bias_0);
    const auto conv2_1_dw_fq_input_0_0 = model.fakeQuantize("conv2_1/dw/fq_input_0", relu1_0, _844848_const_0, _845849_const_0, _846850_const_0, _847851_const_0, 256);
    const auto conv2_1_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv2_1/dw/bn/variance/Fused_Add_", conv2_1_dw_fq_input_0_0, conv2_1_dw_fq_weights_1_0, {1, 1}, {1, 1, 1, 1}, 1);
    const auto conv2_1_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv2_1/dw/bn/variance/Fused_Add_:bias", conv2_1_dw_bn_variance_Fused_Add__0, Constant_2950_0);
    const auto relu2_1_dw_0 = model.relu("relu2_1/dw", conv2_1_dw_bn_variance_Fused_Add__bias_0);
    const auto _607611_const_0 = model.constant("607611_const", mv::utils::generateSequence<double>(1*1*1*1024), {1, 1, 1, 1024}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _606610_const_0 = model.constant("606610_const", mv::utils::generateSequence<double>(1*1*1*1024), {1, 1, 1, 1024}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv6_sep_fq_weights_1_0 = model.fakeQuantize("conv6/sep/fq_weights_1", Constant_2834_0, conv6_sep_fq_weights_1_Copy_out_low2011_const_0, conv6_sep_fq_weights_1_Copy_out_high2012_const_0, _606610_const_0, _607611_const_0, 255);
    const auto _597601_const_0 = model.constant("597601_const", {1.229492}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _596600_const_0 = model.constant("596600_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _595599_const_0 = model.constant("595599_const", {1.229492}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _594598_const_0 = model.constant("594598_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _587591_const_0 = model.constant("587591_const", mv::utils::generateSequence<double>(1*1*1*256), {1, 1, 1, 256}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _586590_const_0 = model.constant("586590_const", mv::utils::generateSequence<double>(1*1*1*256), {1, 1, 1, 256}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv4_2_dw_fq_weights_1_0 = model.fakeQuantize("conv4_2/dw/fq_weights_1", Constant_2819_0, conv4_2_dw_fq_weights_1_Copy_out_low2075_const_0, conv4_2_dw_fq_weights_1_Copy_out_high2076_const_0, _586590_const_0, _587591_const_0, 255);
    const auto _577581_const_0 = model.constant("577581_const", mv::utils::generateSequence<double>(1*1*256*1), {1, 1, 256, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _576580_const_0 = model.constant("576580_const", mv::utils::generateSequence<double>(1*1*256*1), {1, 1, 256, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _575579_const_0 = model.constant("575579_const", mv::utils::generateSequence<double>(1*1*256*1), {1, 1, 256, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _574578_const_0 = model.constant("574578_const", mv::utils::generateSequence<double>(1*1*256*1), {1, 1, 256, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _567571_const_0 = model.constant("567571_const", mv::utils::generateSequence<double>(1*1*1*256), {1, 1, 1, 256}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _566570_const_0 = model.constant("566570_const", mv::utils::generateSequence<double>(1*1*1*256), {1, 1, 1, 256}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv4_1_sep_fq_weights_1_0 = model.fakeQuantize("conv4_1/sep/fq_weights_1", Constant_2818_0, conv4_1_sep_fq_weights_1_Copy_out_low2019_const_0, conv4_1_sep_fq_weights_1_Copy_out_high2020_const_0, _566570_const_0, _567571_const_0, 255);
    const auto _557561_const_0 = model.constant("557561_const", {2.412109}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _556560_const_0 = model.constant("556560_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _555559_const_0 = model.constant("555559_const", {2.412109}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _554558_const_0 = model.constant("554558_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _547551_const_0 = model.constant("547551_const", mv::utils::generateSequence<double>(1*1*1*1024), {1, 1, 1, 1024}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _546550_const_0 = model.constant("546550_const", mv::utils::generateSequence<double>(1*1*1*1024), {1, 1, 1, 1024}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv6_dw_fq_weights_1_0 = model.fakeQuantize("conv6/dw/fq_weights_1", Constant_2833_0, conv6_dw_fq_weights_1_Copy_out_low1995_const_0, conv6_dw_fq_weights_1_Copy_out_high1996_const_0, _546550_const_0, _547551_const_0, 255);
    const auto _537541_const_0 = model.constant("537541_const", mv::utils::generateSequence<double>(1*1*1024*1), {1, 1, 1024, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _536540_const_0 = model.constant("536540_const", mv::utils::generateSequence<double>(1*1*1024*1), {1, 1, 1024, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _535539_const_0 = model.constant("535539_const", mv::utils::generateSequence<double>(1*1*1024*1), {1, 1, 1024, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _534538_const_0 = model.constant("534538_const", mv::utils::generateSequence<double>(1*1*1024*1), {1, 1, 1024, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _527531_const_0 = model.constant("527531_const", mv::utils::generateSequence<double>(1*1*1*128), {1, 1, 1, 128}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _526530_const_0 = model.constant("526530_const", mv::utils::generateSequence<double>(1*1*1*128), {1, 1, 1, 128}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv2_2_sep_fq_weights_1_0 = model.fakeQuantize("conv2_2/sep/fq_weights_1", Constant_2812_0, conv2_2_sep_fq_weights_1_Copy_out_low2027_const_0, conv2_2_sep_fq_weights_1_Copy_out_high2028_const_0, _526530_const_0, _527531_const_0, 255);
    const auto _517521_const_0 = model.constant("517521_const", {3.775391}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _516520_const_0 = model.constant("516520_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _515519_const_0 = model.constant("515519_const", {3.775391}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _514518_const_0 = model.constant("514518_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _507511_const_0 = model.constant("507511_const", mv::utils::generateSequence<double>(1*1*1*64), {1, 1, 1, 64}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _506510_const_0 = model.constant("506510_const", mv::utils::generateSequence<double>(1*1*1*64), {1, 1, 1, 64}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv2_1_sep_fq_weights_1_0 = model.fakeQuantize("conv2_1/sep/fq_weights_1", Constant_2810_0, conv2_1_sep_fq_weights_1_Copy_out_low2051_const_0, conv2_1_sep_fq_weights_1_Copy_out_high2052_const_0, _506510_const_0, _507511_const_0, 255);
    const auto _497501_const_0 = model.constant("497501_const", {5.734375}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _496500_const_0 = model.constant("496500_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _495499_const_0 = model.constant("495499_const", {5.734375}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _494498_const_0 = model.constant("494498_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv2_1_sep_fq_input_0_0 = model.fakeQuantize("conv2_1/sep/fq_input_0", relu2_1_dw_0, _494498_const_0, _495499_const_0, _496500_const_0, _497501_const_0, 256);
    const auto conv2_1_sep_bn_variance_Fused_Add__0 = model.conv("conv2_1/sep/bn/variance/Fused_Add_", conv2_1_sep_fq_input_0_0, conv2_1_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv2_1_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv2_1/sep/bn/variance/Fused_Add_:bias", conv2_1_sep_bn_variance_Fused_Add__0, Constant_2951_0);
    const auto relu2_1_sep_0 = model.relu("relu2_1/sep", conv2_1_sep_bn_variance_Fused_Add__bias_0);
    const auto _487491_const_0 = model.constant("487491_const", mv::utils::generateSequence<double>(1*1*1*1024), {1, 1, 1, 1024}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _486490_const_0 = model.constant("486490_const", mv::utils::generateSequence<double>(1*1*1*1024), {1, 1, 1, 1024}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv5_6_sep_fq_weights_1_0 = model.fakeQuantize("conv5_6/sep/fq_weights_1", Constant_2832_0, conv5_6_sep_fq_weights_1_Copy_out_low1947_const_0, conv5_6_sep_fq_weights_1_Copy_out_high1948_const_0, _486490_const_0, _487491_const_0, 255);
    const auto _477481_const_0 = model.constant("477481_const", {3.361328}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _476480_const_0 = model.constant("476480_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _475479_const_0 = model.constant("475479_const", {3.361328}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _474478_const_0 = model.constant("474478_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _10371041_const_0 = model.constant("10371041_const", mv::utils::generateSequence<double>(1*1*1*64), {1, 1, 1, 64}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _10361040_const_0 = model.constant("10361040_const", mv::utils::generateSequence<double>(1*1*1*64), {1, 1, 1, 64}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv2_2_dw_fq_weights_1_0 = model.fakeQuantize("conv2_2/dw/fq_weights_1", Constant_2811_0, conv2_2_dw_fq_weights_1_Copy_out_low1907_const_0, conv2_2_dw_fq_weights_1_Copy_out_high1908_const_0, _10361040_const_0, _10371041_const_0, 255);
    const auto _10271031_const_0 = model.constant("10271031_const", mv::utils::generateSequence<double>(1*1*64*1), {1, 1, 64, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _10261030_const_0 = model.constant("10261030_const", mv::utils::generateSequence<double>(1*1*64*1), {1, 1, 64, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _10251029_const_0 = model.constant("10251029_const", mv::utils::generateSequence<double>(1*1*64*1), {1, 1, 64, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _10241028_const_0 = model.constant("10241028_const", mv::utils::generateSequence<double>(1*1*64*1), {1, 1, 64, 1}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv2_2_dw_fq_input_0_0 = model.fakeQuantize("conv2_2/dw/fq_input_0", relu2_1_sep_0, _10241028_const_0, _10251029_const_0, _10261030_const_0, _10271031_const_0, 256);
    const auto conv2_2_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv2_2/dw/bn/variance/Fused_Add_", conv2_2_dw_fq_input_0_0, conv2_2_dw_fq_weights_1_0, {2, 2}, {1, 0, 1, 0}, 1);
    const auto conv2_2_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv2_2/dw/bn/variance/Fused_Add_:bias", conv2_2_dw_bn_variance_Fused_Add__0, Constant_2952_0);
    const auto relu2_2_dw_0 = model.relu("relu2_2/dw", conv2_2_dw_bn_variance_Fused_Add__bias_0);
    const auto conv2_2_sep_fq_input_0_0 = model.fakeQuantize("conv2_2/sep/fq_input_0", relu2_2_dw_0, _514518_const_0, _515519_const_0, _516520_const_0, _517521_const_0, 256);
    const auto conv2_2_sep_bn_variance_Fused_Add__0 = model.conv("conv2_2/sep/bn/variance/Fused_Add_", conv2_2_sep_fq_input_0_0, conv2_2_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv2_2_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv2_2/sep/bn/variance/Fused_Add_:bias", conv2_2_sep_bn_variance_Fused_Add__0, Constant_2953_0);
    const auto relu2_2_sep_0 = model.relu("relu2_2/sep", conv2_2_sep_bn_variance_Fused_Add__bias_0);
    const auto conv3_1_dw_fq_input_0_0 = model.fakeQuantize("conv3_1/dw/fq_input_0", relu2_2_sep_0, _924928_const_0, _925929_const_0, _926930_const_0, _927931_const_0, 256);
    const auto conv3_1_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv3_1/dw/bn/variance/Fused_Add_", conv3_1_dw_fq_input_0_0, conv3_1_dw_fq_weights_1_0, {1, 1}, {1, 1, 1, 1}, 1);
    const auto conv3_1_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv3_1/dw/bn/variance/Fused_Add_:bias", conv3_1_dw_bn_variance_Fused_Add__0, Constant_2954_0);
    const auto relu3_1_dw_0 = model.relu("relu3_1/dw", conv3_1_dw_bn_variance_Fused_Add__bias_0);
    const auto conv3_1_sep_fq_input_0_0 = model.fakeQuantize("conv3_1/sep/fq_input_0", relu3_1_dw_0, _884888_const_0, _885889_const_0, _886890_const_0, _887891_const_0, 256);
    const auto conv3_1_sep_bn_variance_Fused_Add__0 = model.conv("conv3_1/sep/bn/variance/Fused_Add_", conv3_1_sep_fq_input_0_0, conv3_1_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv3_1_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv3_1/sep/bn/variance/Fused_Add_:bias", conv3_1_sep_bn_variance_Fused_Add__0, Constant_2955_0);
    const auto relu3_1_sep_0 = model.relu("relu3_1/sep", conv3_1_sep_bn_variance_Fused_Add__bias_0);
    const auto conv3_2_dw_fq_input_0_0 = model.fakeQuantize("conv3_2/dw/fq_input_0", relu3_1_sep_0, _674678_const_0, _675679_const_0, _676680_const_0, _677681_const_0, 256);
    const auto conv3_2_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv3_2/dw/bn/variance/Fused_Add_", conv3_2_dw_fq_input_0_0, conv3_2_dw_fq_weights_1_0, {2, 2}, {1, 0, 1, 0}, 1);
    const auto conv3_2_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv3_2/dw/bn/variance/Fused_Add_:bias", conv3_2_dw_bn_variance_Fused_Add__0, Constant_2956_0);
    const auto relu3_2_dw_0 = model.relu("relu3_2/dw", conv3_2_dw_bn_variance_Fused_Add__bias_0);
    const auto conv3_2_sep_fq_input_0_0 = model.fakeQuantize("conv3_2/sep/fq_input_0", relu3_2_dw_0, _824828_const_0, _825829_const_0, _826830_const_0, _827831_const_0, 256);
    const auto conv3_2_sep_bn_variance_Fused_Add__0 = model.conv("conv3_2/sep/bn/variance/Fused_Add_", conv3_2_sep_fq_input_0_0, conv3_2_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv3_2_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv3_2/sep/bn/variance/Fused_Add_:bias", conv3_2_sep_bn_variance_Fused_Add__0, Constant_2957_0);
    const auto relu3_2_sep_0 = model.relu("relu3_2/sep", conv3_2_sep_bn_variance_Fused_Add__bias_0);
    const auto conv4_1_dw_fq_input_0_0 = model.fakeQuantize("conv4_1/dw/fq_input_0", relu3_2_sep_0, _804808_const_0, _805809_const_0, _806810_const_0, _807811_const_0, 256);
    const auto conv4_1_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv4_1/dw/bn/variance/Fused_Add_", conv4_1_dw_fq_input_0_0, conv4_1_dw_fq_weights_1_0, {1, 1}, {1, 1, 1, 1}, 1);
    const auto conv4_1_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv4_1/dw/bn/variance/Fused_Add_:bias", conv4_1_dw_bn_variance_Fused_Add__0, Constant_2958_0);
    const auto relu4_1_dw_0 = model.relu("relu4_1/dw", conv4_1_dw_bn_variance_Fused_Add__bias_0);
    const auto conv4_1_sep_fq_input_0_0 = model.fakeQuantize("conv4_1/sep/fq_input_0", relu4_1_dw_0, _554558_const_0, _555559_const_0, _556560_const_0, _557561_const_0, 256);
    const auto conv4_1_sep_bn_variance_Fused_Add__0 = model.conv("conv4_1/sep/bn/variance/Fused_Add_", conv4_1_sep_fq_input_0_0, conv4_1_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv4_1_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv4_1/sep/bn/variance/Fused_Add_:bias", conv4_1_sep_bn_variance_Fused_Add__0, Constant_2959_0);
    const auto relu4_1_sep_0 = model.relu("relu4_1/sep", conv4_1_sep_bn_variance_Fused_Add__bias_0);
    const auto conv4_2_dw_fq_input_0_0 = model.fakeQuantize("conv4_2/dw/fq_input_0", relu4_1_sep_0, _574578_const_0, _575579_const_0, _576580_const_0, _577581_const_0, 256);
    const auto conv4_2_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv4_2/dw/bn/variance/Fused_Add_", conv4_2_dw_fq_input_0_0, conv4_2_dw_fq_weights_1_0, {2, 2}, {1, 0, 1, 0}, 1);
    const auto conv4_2_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv4_2/dw/bn/variance/Fused_Add_:bias", conv4_2_dw_bn_variance_Fused_Add__0, Constant_2960_0);
    const auto relu4_2_dw_0 = model.relu("relu4_2/dw", conv4_2_dw_bn_variance_Fused_Add__bias_0);
    const auto conv4_2_sep_fq_input_0_0 = model.fakeQuantize("conv4_2/sep/fq_input_0", relu4_2_dw_0, _654658_const_0, _655659_const_0, _656660_const_0, _657661_const_0, 256);
    const auto conv4_2_sep_bn_variance_Fused_Add__0 = model.conv("conv4_2/sep/bn/variance/Fused_Add_", conv4_2_sep_fq_input_0_0, conv4_2_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv4_2_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv4_2/sep/bn/variance/Fused_Add_:bias", conv4_2_sep_bn_variance_Fused_Add__0, Constant_2961_0);
    const auto relu4_2_sep_0 = model.relu("relu4_2/sep", conv4_2_sep_bn_variance_Fused_Add__bias_0);
    const auto conv5_1_dw_fq_input_0_0 = model.fakeQuantize("conv5_1/dw/fq_input_0", relu4_2_sep_0, _904908_const_0, _905909_const_0, _906910_const_0, _907911_const_0, 256);
    const auto conv5_1_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv5_1/dw/bn/variance/Fused_Add_", conv5_1_dw_fq_input_0_0, conv5_1_dw_fq_weights_1_0, {1, 1}, {1, 1, 1, 1}, 1);
    const auto conv5_1_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv5_1/dw/bn/variance/Fused_Add_:bias", conv5_1_dw_bn_variance_Fused_Add__0, Constant_2962_0);
    const auto relu5_1_dw_0 = model.relu("relu5_1/dw", conv5_1_dw_bn_variance_Fused_Add__bias_0);
    const auto _10171021_const_0 = model.constant("10171021_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto _10161020_const_0 = model.constant("10161020_const", mv::utils::generateSequence<double>(1*1*1*512), {1, 1, 1, 512}, mv::DType("Float32"), mv::Order("NCHW"));
    const auto conv5_1_sep_fq_weights_1_0 = model.fakeQuantize("conv5_1/sep/fq_weights_1", Constant_2822_0, conv5_1_sep_fq_weights_1_Copy_out_low2067_const_0, conv5_1_sep_fq_weights_1_Copy_out_high2068_const_0, _10161020_const_0, _10171021_const_0, 255);
    const auto _10071011_const_0 = model.constant("10071011_const", {1.644531}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _10061010_const_0 = model.constant("10061010_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _10051009_const_0 = model.constant("10051009_const", {1.644531}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto _10041008_const_0 = model.constant("10041008_const", {0.000000}, {1}, mv::DType("Float32"), mv::Order("W"));
    const auto conv5_1_sep_fq_input_0_0 = model.fakeQuantize("conv5_1/sep/fq_input_0", relu5_1_dw_0, _10041008_const_0, _10051009_const_0, _10061010_const_0, _10071011_const_0, 256);
    const auto conv5_1_sep_bn_variance_Fused_Add__0 = model.conv("conv5_1/sep/bn/variance/Fused_Add_", conv5_1_sep_fq_input_0_0, conv5_1_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv5_1_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv5_1/sep/bn/variance/Fused_Add_:bias", conv5_1_sep_bn_variance_Fused_Add__0, Constant_2963_0);
    const auto relu5_1_sep_0 = model.relu("relu5_1/sep", conv5_1_sep_bn_variance_Fused_Add__bias_0);
    const auto conv5_2_dw_fq_input_0_0 = model.fakeQuantize("conv5_2/dw/fq_input_0", relu5_1_sep_0, _864868_const_0, _865869_const_0, _866870_const_0, _867871_const_0, 256);
    const auto conv5_2_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv5_2/dw/bn/variance/Fused_Add_", conv5_2_dw_fq_input_0_0, conv5_2_dw_fq_weights_1_0, {1, 1}, {1, 1, 1, 1}, 1);
    const auto conv5_2_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv5_2/dw/bn/variance/Fused_Add_:bias", conv5_2_dw_bn_variance_Fused_Add__0, Constant_2964_0);
    const auto relu5_2_dw_0 = model.relu("relu5_2/dw", conv5_2_dw_bn_variance_Fused_Add__bias_0);
    const auto conv5_2_sep_fq_input_0_0 = model.fakeQuantize("conv5_2/sep/fq_input_0", relu5_2_dw_0, _964968_const_0, _965969_const_0, _966970_const_0, _967971_const_0, 256);
    const auto conv5_2_sep_bn_variance_Fused_Add__0 = model.conv("conv5_2/sep/bn/variance/Fused_Add_", conv5_2_sep_fq_input_0_0, conv5_2_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv5_2_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv5_2/sep/bn/variance/Fused_Add_:bias", conv5_2_sep_bn_variance_Fused_Add__0, Constant_2965_0);
    const auto relu5_2_sep_0 = model.relu("relu5_2/sep", conv5_2_sep_bn_variance_Fused_Add__bias_0);
    const auto conv5_3_dw_fq_input_0_0 = model.fakeQuantize("conv5_3/dw/fq_input_0", relu5_2_sep_0, _784788_const_0, _785789_const_0, _786790_const_0, _787791_const_0, 256);
    const auto conv5_3_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv5_3/dw/bn/variance/Fused_Add_", conv5_3_dw_fq_input_0_0, conv5_3_dw_fq_weights_1_0, {1, 1}, {1, 1, 1, 1}, 1);
    const auto conv5_3_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv5_3/dw/bn/variance/Fused_Add_:bias", conv5_3_dw_bn_variance_Fused_Add__0, Constant_2966_0);
    const auto relu5_3_dw_0 = model.relu("relu5_3/dw", conv5_3_dw_bn_variance_Fused_Add__bias_0);
    const auto conv5_3_sep_fq_input_0_0 = model.fakeQuantize("conv5_3/sep/fq_input_0", relu5_3_dw_0, _634638_const_0, _635639_const_0, _636640_const_0, _637641_const_0, 256);
    const auto conv5_3_sep_bn_variance_Fused_Add__0 = model.conv("conv5_3/sep/bn/variance/Fused_Add_", conv5_3_sep_fq_input_0_0, conv5_3_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv5_3_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv5_3/sep/bn/variance/Fused_Add_:bias", conv5_3_sep_bn_variance_Fused_Add__0, Constant_2967_0);
    const auto relu5_3_sep_0 = model.relu("relu5_3/sep", conv5_3_sep_bn_variance_Fused_Add__bias_0);
    const auto conv5_4_dw_fq_input_0_0 = model.fakeQuantize("conv5_4/dw/fq_input_0", relu5_3_sep_0, _944948_const_0, _945949_const_0, _946950_const_0, _947951_const_0, 256);
    const auto conv5_4_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv5_4/dw/bn/variance/Fused_Add_", conv5_4_dw_fq_input_0_0, conv5_4_dw_fq_weights_1_0, {1, 1}, {1, 1, 1, 1}, 1);
    const auto conv5_4_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv5_4/dw/bn/variance/Fused_Add_:bias", conv5_4_dw_bn_variance_Fused_Add__0, Constant_2968_0);
    const auto relu5_4_dw_0 = model.relu("relu5_4/dw", conv5_4_dw_bn_variance_Fused_Add__bias_0);
    const auto conv5_4_sep_fq_input_0_0 = model.fakeQuantize("conv5_4/sep/fq_input_0", relu5_4_dw_0, _984988_const_0, _985989_const_0, _986990_const_0, _987991_const_0, 256);
    const auto conv5_4_sep_bn_variance_Fused_Add__0 = model.conv("conv5_4/sep/bn/variance/Fused_Add_", conv5_4_sep_fq_input_0_0, conv5_4_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv5_4_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv5_4/sep/bn/variance/Fused_Add_:bias", conv5_4_sep_bn_variance_Fused_Add__0, Constant_2969_0);
    const auto relu5_4_sep_0 = model.relu("relu5_4/sep", conv5_4_sep_bn_variance_Fused_Add__bias_0);
    const auto conv5_5_dw_fq_input_0_0 = model.fakeQuantize("conv5_5/dw/fq_input_0", relu5_4_sep_0, _714718_const_0, _715719_const_0, _716720_const_0, _717721_const_0, 256);
    const auto conv5_5_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv5_5/dw/bn/variance/Fused_Add_", conv5_5_dw_fq_input_0_0, conv5_5_dw_fq_weights_1_0, {1, 1}, {1, 1, 1, 1}, 1);
    const auto conv5_5_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv5_5/dw/bn/variance/Fused_Add_:bias", conv5_5_dw_bn_variance_Fused_Add__0, Constant_2970_0);
    const auto relu5_5_dw_0 = model.relu("relu5_5/dw", conv5_5_dw_bn_variance_Fused_Add__bias_0);
    const auto conv5_5_sep_fq_input_0_0 = model.fakeQuantize("conv5_5/sep/fq_input_0", relu5_5_dw_0, _754758_const_0, _755759_const_0, _756760_const_0, _757761_const_0, 256);
    const auto conv5_5_sep_bn_variance_Fused_Add__0 = model.conv("conv5_5/sep/bn/variance/Fused_Add_", conv5_5_sep_fq_input_0_0, conv5_5_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv5_5_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv5_5/sep/bn/variance/Fused_Add_:bias", conv5_5_sep_bn_variance_Fused_Add__0, Constant_2971_0);
    const auto relu5_5_sep_0 = model.relu("relu5_5/sep", conv5_5_sep_bn_variance_Fused_Add__bias_0);
    const auto conv5_6_dw_fq_input_0_0 = model.fakeQuantize("conv5_6/dw/fq_input_0", relu5_5_sep_0, _734738_const_0, _735739_const_0, _736740_const_0, _737741_const_0, 256);
    const auto conv5_6_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv5_6/dw/bn/variance/Fused_Add_", conv5_6_dw_fq_input_0_0, conv5_6_dw_fq_weights_1_0, {2, 2}, {1, 0, 1, 0}, 1);
    const auto conv5_6_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv5_6/dw/bn/variance/Fused_Add_:bias", conv5_6_dw_bn_variance_Fused_Add__0, Constant_2972_0);
    const auto relu5_6_dw_0 = model.relu("relu5_6/dw", conv5_6_dw_bn_variance_Fused_Add__bias_0);
    const auto conv5_6_sep_fq_input_0_0 = model.fakeQuantize("conv5_6/sep/fq_input_0", relu5_6_dw_0, _474478_const_0, _475479_const_0, _476480_const_0, _477481_const_0, 256);
    const auto conv5_6_sep_bn_variance_Fused_Add__0 = model.conv("conv5_6/sep/bn/variance/Fused_Add_", conv5_6_sep_fq_input_0_0, conv5_6_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv5_6_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv5_6/sep/bn/variance/Fused_Add_:bias", conv5_6_sep_bn_variance_Fused_Add__0, Constant_2973_0);
    const auto relu5_6_sep_0 = model.relu("relu5_6/sep", conv5_6_sep_bn_variance_Fused_Add__bias_0);
    const auto conv6_dw_fq_input_0_0 = model.fakeQuantize("conv6/dw/fq_input_0", relu5_6_sep_0, _534538_const_0, _535539_const_0, _536540_const_0, _537541_const_0, 256);
    const auto conv6_dw_bn_variance_Fused_Add__0 = model.depthwiseConv("conv6/dw/bn/variance/Fused_Add_", conv6_dw_fq_input_0_0, conv6_dw_fq_weights_1_0, {1, 1}, {1, 1, 1, 1}, 1);
    const auto conv6_dw_bn_variance_Fused_Add__bias_0 = model.bias("conv6/dw/bn/variance/Fused_Add_:bias", conv6_dw_bn_variance_Fused_Add__0, Constant_2974_0);
    const auto relu6_dw_0 = model.relu("relu6/dw", conv6_dw_bn_variance_Fused_Add__bias_0);
    const auto conv6_sep_fq_input_0_0 = model.fakeQuantize("conv6/sep/fq_input_0", relu6_dw_0, _594598_const_0, _595599_const_0, _596600_const_0, _597601_const_0, 256);
    const auto conv6_sep_bn_variance_Fused_Add__0 = model.conv("conv6/sep/bn/variance/Fused_Add_", conv6_sep_fq_input_0_0, conv6_sep_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto conv6_sep_bn_variance_Fused_Add__bias_0 = model.bias("conv6/sep/bn/variance/Fused_Add_:bias", conv6_sep_bn_variance_Fused_Add__0, Constant_2975_0);
    const auto relu6_sep_0 = model.relu("relu6/sep", conv6_sep_bn_variance_Fused_Add__bias_0);
    const auto pool6_reduce_fq_input_0_0 = model.fakeQuantize("pool6/reduce/fq_input_0", relu6_sep_0, _774778_const_0, _775779_const_0, _776780_const_0, _777781_const_0, 256);
    const auto pool6_reduce_0 = model.averagePool("pool6/reduce", pool6_reduce_fq_input_0_0, {7, 7}, {1, 1}, {0, 0, 0, 0}, true);
    const auto fc7_WithoutBiases_fq_input_0_0 = model.fakeQuantize("fc7/WithoutBiases/fq_input_0", pool6_reduce_0, _694698_const_0, _695699_const_0, _696700_const_0, _697701_const_0, 256);
    const auto fc7_0 = model.conv("fc7", fc7_WithoutBiases_fq_input_0_0, fc7_WithoutBiases_fq_weights_1_0, {1, 1}, {0, 0, 0, 0}, 1, 1);
    const auto fc7_bias_0 = model.bias("fc7:bias", fc7_0, Constant_2976_0);
    const auto prob_0 = model.softmax("prob", fc7_bias_0, "C");
    model.output("prob:0", prob_0, mv::DType("Float16"), true);
}

int main(int argc, char **argv)
{
    InputParams params;

    if (!params.parse_args(argc, argv)) { return -1; }

    mv::CompilationUnit unit("parserModel");
    mv::OpModel& om = unit.model();
    build_MOBILENET(om);

    std::string compDescPath = params.comp_descriptor_;
    unit.loadCompilationDescriptor(compDescPath);

    unit.loadTargetDescriptor(mv::Target::ma2490);
    unit.initialize();
    unit.run();

    return 0;
}
