
// The file was generated by RecordedOpModel

#include <limits>
#include <include/mcm/op_model.hpp>
#include "include/mcm/compiler/compilation_unit.hpp"
#include "single_conv_hde.data.inc"

void build_pySwigCU(mv::OpModel& model)
{
    using namespace mv;

    static const auto inf = std::numeric_limits<double>::infinity();

    const auto input_3_0 = model.input({224, 224, 3, 1}, mv::DType("UInt8"), mv::Order::getZMajorID(4), {{128},{0.007843137718737125},{-1.0},{1.0}}, "input#3");
    const auto conv1_conv1_0_weights_1_0 = model.constantInt(conv1_conv1_0_weights_1_0_data, {7, 7, 3, 32}, mv::DType("UInt8"), mv::Order("NCHW"), {{115},{0.0028280930127948523},{-0.32530343532562256},{0.3958602845668793}}, "conv1/conv1#0_weights#1");
    const auto conv1_conv1_4_0 = model.conv(input_3_0, conv1_conv1_0_weights_1_0, {2, 2}, {2, 3, 2, 3}, 1, 1, mv::DType("UInt8"), {{0},{0.003921568859368563},{0.0},{1.0}}, "conv1/conv1#4");
    const auto conv1_conv1_0_bias_2weights_0 = model.constantInt(conv1_conv1_0_bias_2weights_0_data, {32}, mv::DType("UInt8"), mv::Order::getColMajorID(1),{{0},{2.2181122403708287e-05},{-inf},{inf}}, "conv1/conv1#0_bias#2weights");
    const auto conv1_conv1_0_bias_2_0 = model.bias(conv1_conv1_4_0, conv1_conv1_0_bias_2weights_0, mv::DType("UInt8"), {{0},{0.003921568859368563},{0.0},{1.0}}, "conv1/conv1#0_bias#2");
    const auto output = model.output(conv1_conv1_0_bias_2_0, mv::DType("Default"), {{},{},{},{}}, "");
}

int main()
{
    mv::CompilationUnit unit("parserModel");
    mv::OpModel& om = unit.model();
    build_pySwigCU(om);

    //Note :: Switch on HDE in compilation descriptor
    std::string compDescPath = mv::utils::projectRootPath() + "/config/compilation/release_kmb.json";
    unit.loadCompilationDescriptor(compDescPath);
    //Disabling CM Conv for the test
    unit.compilationDescriptor().setPassArg("GlobalConfigParams", "enable_channel_major_conv", mv::Attribute(bool(false)));

    unit.loadTargetDescriptor(mv::Target::ma2490);
    unit.initialize();
    unit.run();

    return 0;
}

