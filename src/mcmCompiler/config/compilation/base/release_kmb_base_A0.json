{
    "kmb_adapt": {
        "Singular": [
            "DecideConcatLocation",
            "ConcatAsImplicit",
            "ConvertToImplicitOps",
            "StoreWorkloadStrategy",
            "LoadPWLQuantParams",
            "ConvertOpsToTasks",
            "ValidateVerticalAdds",
            "GenerateAndPopulateInstructionListTables",
            {
                "name": "GenerateDot",
                "output": "output/GenerateAndPopulateInstructionListTables.dot",
                "scope": "OpModel",
                "content": "full",
                "html": true
            },
            {
                "name": "ConvertDot",
                "input": "output/GenerateAndPopulateInstructionListTables.dot"
            },
            "SetUpPPETasks",
            {
                "name": "GenerateDot",
                "output": "output/SetUpPPETasks.dot",
                "scope": "OpModel",
                "content": "full",
                "html": true
            },
            {
                "name": "ConvertDot",
                "input": "output/SetUpPPETasks.dot"
            },
            "TaskMultiplePostOps",
            "ForceSerialize",
            "KMBOrderConversion",
            "AlignUnpopulatedTensors",
            "AddAlignOpForInputTensors",
            "AlignPopulatedTensors",
            "RemoveCropAlignInCMX",
            "CropOrPadFinalOutput",
            "AlignTaskWeights",
            "ImplicitOutputDTypeUpdate",
            "KMBQuantizeConversion",
            "AdaptFixedPointCompute",
            "ConfigureIOPrecision",
            "EnsureDTypeCompatibility",
            "GenerateSparsityMapsPopulatedTensors",
            "GenerateWeightsTables",
            {
                "name": "GenerateDot",
                "output": "output/GenerateWeightsTables.dot",
                "scope": "OpModel",
                "content": "full",
                "html": true
            },
            {
                "name": "ConvertDot",
                "input": "output/GenerateWeightsTables.dot"
            },
            "ComputeTensorsQuantParams",
            "UpdateImplicitLayersQuantizationParams",
            "PopulateWeightsTablesQuantization",
            "RemoveBiasTensors",
            "StrategyLayersToTensors",
            "SetSparsityAttrForUnpopulatedTensors",
            "FuseConstants",
            "SplittingTensorsAcrossClusters",
            "DeQuantizeU8ConstToFP16Const",
            "FuseImplicits"
        ]
    },
    "finalize": {
        "Singular": [
            "GenerateSparsityMapsUnpopulatedTensors",
            "GenerateSparsityMapsEltwise",
            "MarkDMATasksToIgnore",
            {
              "name" : "LocateInplaceEltwiseOps"
            },
            "UPATaskChainScheduleHandling",
            {
                 "name" : "ChainPipeliningTransform",
                 "select_stages" : 2,
                 "activation_pipelining" : true,
                 "vertical_fusion_pipelining" : true
            },
            "PipeLineAcrossParallelBranches",
            {
                "name" : "MemContextForHugeActivations",
                "enable_pass" : true,
                "peak_threshold_percent" : 49,
                "valley_threshold_percent" : 25,
                "max_context_chain_size" : 3
            },
            { "name": "LpScheduler",
              "output" : "lp_scheduler_output.txt",
              "ddr_address_generation" : true,
              "no_temporal_edges" : true,
              "enable_cmx_concat" : true,
              "enable_inplace_eltwise" : true
            },
            "AssignSEBasePtr",
            {
                "name" : "RecomputeImplicitOpAttr",
                "attribute" : "Location"
            },
            "SplittingTensorsAcrossClusters",
            {
                "name": "TransitiveReduction",
                "filter": "MemoryRequirement"
            },
            {
                "name": "GenerateWorkloads",
                "costfunction": "greedy",
                "TensorSplitAlgorithms": "Rectangle, Z-Tiling",
                "_comment": "Supported CostFunctions are: balanced | criticalpath | minmax | greedy. Supported TensorSplitAlgorithms are Rectangle, Z-Tiling"
            },
            "EnsureSplitStrategiesForNonSpilling",
            "ArrangeKmbExecution",
            "AllocateInputOutputTensorsKmb",
            "AllocateGraphfileTensorsKmb",
            "ReAllocateImplicitOperationsKmb",
            "AllocateCMXTensorsKmb",
            {
              "name": "LpScheduler",
              "output" : "lp_scheduler_output.txt",
              "allocator_mode": true,
              "ddr_control_edges" : true
            },
            "SetNotFusedDataIndexes",
            {
                "name" : "RecomputeImplicitOpAttr",
                "attribute" : "address"
            },
            "SetSliceAddressesInCMX",
            "LayerNumbering",
            "PopulateWeightsTablesPointers",
            "PopulateStorageElementPointers",
            "MarkAsymmetricalStrideTensorsLeadToCMXConcat",
            "RepopulateFusedConstants"
        ]
    },

    "@MERGE@": "@FILE@/release_kmb_base.json"
}
