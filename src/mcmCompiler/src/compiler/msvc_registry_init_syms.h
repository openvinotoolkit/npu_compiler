//
// Copyright (C) 2022 Intel Corporation
// SPDX-License-Identifier: Apache 2.0
//
#pragma once

#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__Barrier")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__BarrierDependencies")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__DType")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__DmaDirection")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__Element")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__ImplicitFlow")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitArrayShort2")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitArrayShort3")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitArrayShort4")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitMapStringElement")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitMemoryLocation")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitSetString")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitSizeT")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitString")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitUnsigned")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitUnsignedShort")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitVecDouble")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitVecElem")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitVecFloat")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitVecInt64")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitVecSizeT")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitVecStr")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitVecTensorInfo")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitVecU8")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitVecUnsigned")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitVectorDataElem")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitVectorStrategySet")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__InitLambdaFunction")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__KmbOptGlCongigClusterMem")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__KmbOptGlCongigDdrBw")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__KmbOptGlCongigDpuPerCluster")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__KmbOptGlCongigRefDev")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__KmbOptGlCongigSysClk")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__KmbOptGlCongigTotClusters")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__KmbOptGlStrAtomicClustering")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__KmbOptGlStrBuffering")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__KmbOptGlStrPipelining")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__KmbOptGlStrSparsity")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__KmbOptGlStrSpilling")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__KmbOptGlStrStreaming")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__Order")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__PPEFixedFunction")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__PPETask")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__QuantizationParams")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__Shape")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__TensorInfo")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__Workloads")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__bool")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__double")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__int")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__int64_t")
#pragma comment(linker, "/include:__MCM_REGISTER__AttributeEntry__uint8_t")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Bin")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Default")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Float16")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Float32")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Float64")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Float8")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Int16")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Int2")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Int2X")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Int32")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Int4")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Int4X")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Int64")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Int8")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_Log")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_UInt16")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_UInt32")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_UInt64")
#pragma comment(linker, "/include:__MCM_REGISTER__DTypeEntry_UInt8")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Align")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Argmax")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__AveragePool")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__BarrierTask")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__BatchNormalization")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Bias")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__CTCDecoder")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Concat")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Constant")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ConstantDataElement")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ConstantInt")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Conv")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Conversion")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Copy")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Crop")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__CustomOcl")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__CustomCpp")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__DMATask")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__DPUTask")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Deallocate")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Deconv")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__DepthwiseConv")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__DetectionOutput")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Dropout")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Dummy")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Eltwise")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Elu")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Exp")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__FakeQuantize")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Flatten")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__FullyConnected")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Gather")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Identity")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ImplicitConcat")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ImplicitInput")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ImplicitInputSlice")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ImplicitJoin")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ImplicitOutput")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ImplicitPermute")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ImplicitResample")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ImplicitReshape")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ImplicitUnion")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Input")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Interp")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__LeakyRelu")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__LocalResponseNormalization")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__MatMul")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__MaxPool")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Maximum")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Minimum")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Norm")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Normalize")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Output")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__PSROIPooling")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Permute")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__PlaceholderTask")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Prelu")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Priorbox")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Proposal")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__PseudoOp")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Quantize")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ROIPooling")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Reciprocal")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__RefConv")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__RegionYolo")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Relu")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Reorder")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__ReorgYolo")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Resample")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Reshape")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Scale")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Sigmoid")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Slice")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Softmax")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__SparsityMap")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Tanh")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__Tile")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__TopK")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__UPATask")
#pragma comment(linker, "/include:__MCM_REGISTER__OpEntry__WeightsTable")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_C")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CHNTW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CHNW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CHNWT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CHTNW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CHTWN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CHW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CHWN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CHWNT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CHWTN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CNHTW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CNHW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CNHWT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CNTHW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CNTWH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CNWH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CNWHT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CNWTH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CTHNW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CTHWN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CTNHW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CTNWH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CTWHN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CTWNH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CWH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CWHN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CWHNT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CWHTN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CWNH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CWNHT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CWNTH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CWTHN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_CWTNH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_H")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HCNTW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HCNW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HCNWT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HCTNW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HCTWN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HCW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HCWN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HCWNT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HCWTN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HNCTW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HNCW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HNCWT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HNTCW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HNTWC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HNWC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HNWCT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HNWTC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HTCNW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HTCWN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HTNCW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HTNWC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HTWCN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HTWNC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HWC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HWCN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HWCNT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HWCTN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HWNC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HWNCT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HWNTC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HWTCN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_HWTNC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_N")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NCHTW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NCHW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NCHWT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NCTHW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NCTWH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NCWH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NCWHT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NCWTH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NHCTW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NHCW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NHCWT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NHTCW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NHTWC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NHWC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NHWCT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NHWTC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NTCHW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NTCWH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NTHCW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NTHWC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NTWCH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NTWHC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NWCH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NWCHT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NWCTH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NWHC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NWHCT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NWHTC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NWTCH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_NWTHC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_T")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TCHNW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TCHWN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TCNHW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TCNWH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TCWHN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TCWNH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_THCNW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_THCWN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_THNCW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_THNWC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_THWCN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_THWNC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TNCHW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TNCWH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TNHCW")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TNHWC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TNWCH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TNWHC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TWCHN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TWCNH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TWHCN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TWHNC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TWNCH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_TWNHC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_W")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WCH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WCHN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WCHNT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WCHTN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WCNH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WCNHT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WCNTH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WCTHN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WCTNH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WHC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WHCN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WHCNT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WHCTN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WHNC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WHNCT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WHNTC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WHTCN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WHTNC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WNCH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WNCHT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WNCTH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WNHC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WNHCT")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WNHTC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WNTCH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WNTHC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WTCHN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WTCNH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WTHCN")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WTHNC")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WTNCH")
#pragma comment(linker, "/include:__MCM_REGISTER__OrderEntry_WTNHC")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AdaptFixedPointCompute")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AddAlignOpForInputTensors")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AddDPUTasksWeightsDMATasks")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AddDeallocationTasks")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AddPermuteToIOOps")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AddPseudoDependency")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AddUPATasksExtraInputsDMATasks")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AddressHelper")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AlignPopulatedTensors")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AlignTaskWeights")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AlignTo16Channels")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AlignUnpopulatedTensors")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AllocateCMXTensorsKmb")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AllocateGraphfileTensorsKmb")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AllocateInputOutputTensorsKmb")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ApplyTargetVars")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ArrangeKmbExecution")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AssignInputNode")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AssignOutputNode")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AssignUniqueOpId")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AssignUniqueTaskId")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_BarrierIndexAssignment")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_BarrierSchedulerPass")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_BuildGraphFileKmb")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ChainPipeliningInverseTransform")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ChainPipeliningTransform")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_CheckIntegerTensors")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_CheckPWLForRequantize")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_CheckTensors")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_CollapseBranchedScale")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ComputeMemory")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ComputeSparsitySolution")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ComputeTensorsQuantParams")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ConcatAsImplicit")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ConfigureIOPrecision")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ConsecutiveDMATaskWorkaround")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ConvDilationUsingStorageElement")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ConvDilationUsingWeights")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ConvertDot")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ConvertFlatbuffer")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ConvertOpsToTasks")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_CorrectExecutionSchedule")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_CreateSourceStructure")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_CropOrPadFinalOutput")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_DMAOrdering")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_AssignPhysicalBarrier")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_DecideConcatLocation")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_DecideOutputDataType")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_EltwiseToSWEltwise")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_EnsureSplitStrategiesForSpilling")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_FakeQuantize")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ForceAddressSetterPass")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ForceSerialize")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ForceSparseOutputPass")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ForceSpillActivationPass")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_FusePostOps")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GenerateBlobKmb")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GenerateDot")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GenerateEltWiseConstants")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GenerateExecutionSchedule")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GenerateAndPopulateInstructionListTables")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GenerateJSON")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GenerateSparsityMapsEltwise")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GenerateSparsityMapsPopulatedTensors")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GenerateSparsityMapsUnpopulatedTensors")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GenerateWeightsTables")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GenerateWorkloads")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GlobalConfigParams")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GlobalParamsReset")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GraphParameterOptimization")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_GraphfileIndexHelper")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_HackExecutionSchedule")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_HandleGroupConvolution")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_HangingDmaControlFlows")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_HwConvertToEltwise")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ImplicitOutputDTypeUpdate")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_InsertBarrierTasks")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_IsDAG")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_KMBOrderConversion")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_KMBQuantizeConversion")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_LayerNumbering")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_LayoutDMA")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_Linearization")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_LoadPWLQuantParams")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_LocateCMXConcateableOps")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_LocateInplaceEltwiseOps")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_LocatePipeLinedOps")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_LpScheduler")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_MarkCMCompatibleConvs")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_MarkEltWiseUpaInputs")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_MarkTrailingUPATasks")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_NNCMX2DDRControlFlows")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_OpModelCutter")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_PermuteAsImplicit")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_PlaceNeutralMaxPoolBefore")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_PlacementOfOps")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_PopulateStorageElementPointers")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_PopulateWeightsTablesPointers")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_PopulateWeightsTablesQuantization")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_PostTrainingQuantize")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ReAllocateImplicitOperationsKmb")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_RecomputeImplicitOpAttr")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_RemoveBiasTensors")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_RemoveCropAlignInCMX")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_RemoveDeallocationTasks")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_RemoveOps")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_RemoveRedundantDMAsFromConcat")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_RemoveRedundantUpdateBarriers")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_SplitBarrier")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ReorderDmasInSchedule")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ReplacementOps")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ResampleAsImplicit")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ReshapeAsImplicit")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ResolveImplicitOperations")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_ScheduleHelper")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_SelectiveCMconv")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_SetDpuTasksMemoryLocation")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_SetSliceAddressesInCMX")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_SetSparsityAttrForUnpopulatedTensors")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_SetUPATasksMemoryLocation")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_SetUpPPETasks")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_SplittingTensorsAcrossClusters")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_StoreBarriersNamesInTasks")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_StoreGraphOptimizerDecisions")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_StoreWorkloadStrategy")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_StrategyLayersToTensors")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_StreamBinaryDataWeights")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_StreamCopyOperations")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_StreamingOperations")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_TaskControlFlows")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_TaskMultiplePostOps")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_TensorGraphColoring")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_TensorsToFP16")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_TensorsToU8")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_TileOps")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_TransitiveReduction")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_UPATaskChainScheduleHandling")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_UpdateBarrierProducerConsumerCounts")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_UpdateBarrierRefs")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_UpdateImplicitLayersLocation")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_UpdateImplicitLayersQuantizationParams")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_UpdatePhysicalIDinGraphFile")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_UseReferenceOps")
#pragma comment(linker, "/include:__MCM_REGISTER__PassEntry_VerifyDMASchedulingOrder")
#pragma comment(linker, "/include:__MCM_REGISTER__StrategySetEntry__KmbOptLayerInitConcat")
#pragma comment(linker, "/include:__MCM_REGISTER__StrategySetEntry__KmbOptLayerInitConv")
#pragma comment(linker, "/include:__MCM_REGISTER__StrategySetEntry__KmbOptLayerInitDefault")
#pragma comment(linker, "/include:__MCM_REGISTER__StrategySetEntry__KmbOptLayerInitDwConv")
#pragma comment(linker, "/include:__MCM_REGISTER__StrategySetEntry__KmbOptLayerInitEltwise")
#pragma comment(linker, "/include:__MCM_REGISTER__StrategySetEntry__KmbOptLayerInitImplicitInput")
#pragma comment(linker, "/include:__MCM_REGISTER__StrategySetEntry__KmbOptLayerInitInput")
#pragma comment(linker, "/include:__MCM_REGISTER__StrategySetEntry__KmbOptLayerInitMaxPool")
#pragma comment(linker, "/include:__MCM_REGISTER__StrategySetEntry__KmbOptLayerInitOutput")
