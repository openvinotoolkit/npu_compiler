diff --git a/CMakeLists.txt b/CMakeLists.txt
index 34a23d40..27a08530 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -61,6 +61,10 @@ unset(_tbb_ver_minor)
 include(CheckCXXCompilerFlag)
 include(GNUInstallDirs)
 
+if (!BUILD_SHARED_LIBS)
+    add_definitions(-D__TBB_DYNAMIC_LOAD_ENABLED=0)
+    add_definitions(-D__TBB_SOURCE_DIRECTLY_INCLUDED=1)
+endif()
 # ---------------------------------------------------------------------------------------------------------
 # Handle C++ standard version.
 if (NOT MSVC)  # no need to cover MSVC as it uses C++14 by default.
diff --git a/cmake/compilers/GNU.cmake b/cmake/compilers/GNU.cmake
index d9c07591..30fa2bb1 100644
--- a/cmake/compilers/GNU.cmake
+++ b/cmake/compilers/GNU.cmake
@@ -21,6 +21,7 @@ set(TBB_MMD_FLAG -MMD)
 if (CMAKE_SYSTEM_PROCESSOR STREQUAL x86_64)
     set(TBB_COMMON_COMPILE_FLAGS -mrtm)
 endif()
+set(TBB_COMMON_COMPILE_FLAGS ${TBB_COMMON_COMPILE_FLAGS} -fstack-protector-all)
 
 set(TBB_COMMON_LINK_LIBS dl)
 
diff --git a/cmake/hwloc_detection.cmake b/cmake/hwloc_detection.cmake
index 63c3135a..3d9ebcc5 100644
--- a/cmake/hwloc_detection.cmake
+++ b/cmake/hwloc_detection.cmake
@@ -12,7 +12,7 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-list(APPEND HWLOC_REQUIRED_VERSIONS 1_11 2 2_4)
+list(APPEND HWLOC_REQUIRED_VERSIONS 1_11 2 2_9)
 
 foreach(hwloc_version ${HWLOC_REQUIRED_VERSIONS})
     if (NOT WIN32)
diff --git a/src/tbb/governor.cpp b/src/tbb/governor.cpp
index cd4cb880..d429563a 100644
--- a/src/tbb/governor.cpp
+++ b/src/tbb/governor.cpp
@@ -354,7 +354,7 @@ static const unsigned LinkTableSize = sizeof(TbbBindLinkTable) / sizeof(dynamic_
 
 #define TBBBIND_NAME LIBRARY_PREFIX "tbbbind" DEBUG_SUFFIX LIBRARY_EXTENSION
 #define TBBBIND_2_0_NAME LIBRARY_PREFIX "tbbbind_2_0" DEBUG_SUFFIX LIBRARY_EXTENSION
-#define TBBBIND_2_4_NAME LIBRARY_PREFIX "tbbbind_2_4" DEBUG_SUFFIX LIBRARY_EXTENSION
+#define TBBBIND_2_5_NAME LIBRARY_PREFIX "tbbbind_2_5" DEBUG_SUFFIX LIBRARY_EXTENSION
 #endif /* _WIN32 || _WIN64 || __linux__ */
 
 // Representation of system hardware topology information on the TBB side.
@@ -381,7 +381,7 @@ const char* load_tbbbind_shared_object() {
     GetNativeSystemInfo(&si);
     if (si.dwNumberOfProcessors > 32) return nullptr;
 #endif /* _WIN32 && !_WIN64 */
-    for (const auto& tbbbind_version : {TBBBIND_2_4_NAME, TBBBIND_2_0_NAME, TBBBIND_NAME}) {
+    for (const auto& tbbbind_version : {TBBBIND_2_5_NAME, TBBBIND_2_0_NAME, TBBBIND_NAME}) {
         if (dynamic_link(tbbbind_version, TbbBindLinkTable, LinkTableSize)) {
             return tbbbind_version;
         }
diff --git a/src/tbbbind/CMakeLists.txt b/src/tbbbind/CMakeLists.txt
index 69173253..a65f7d80 100644
--- a/src/tbbbind/CMakeLists.txt
+++ b/src/tbbbind/CMakeLists.txt
@@ -95,7 +95,7 @@ endmacro()
 
 tbbbind_build(tbbbind     HWLOC::hwloc_1_11)
 tbbbind_build(tbbbind_2_0 HWLOC::hwloc_2   )
-tbbbind_build(tbbbind_2_4 HWLOC::hwloc_2_4 )
+tbbbind_build(tbbbind_2_5 HWLOC::hwloc_2_9 )
 
 if (DEFINED CMAKE_SKIP_BUILD_RPATH_OLD_VALUE)
     set(CMAKE_SKIP_BUILD_RPATH ${CMAKE_SKIP_BUILD_RPATH_OLD_VALUE})
diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index ac38f996..b93cb803 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -251,9 +251,9 @@ function(tbb_add_tbbbind_test)
         FAIL_REGULAR_EXPRESSION "Status: FAILURE!"
     )
 
-    if (TARGET HWLOC::hwloc_2_4 AND NOT HWLOC_2_4_TESTS_STATUS_SHOWN)
-        message(STATUS "HWLOC 2.4 dependent tests were enabled.")
-        set(HWLOC_2_4_TESTS_STATUS_SHOWN TRUE PARENT_SCOPE)
+    if (TARGET HWLOC::hwloc_2_9 AND NOT HWLOC_2_9_TESTS_STATUS_SHOWN)
+        message(STATUS "HWLOC 2.9 dependent tests were enabled.")
+        set(HWLOC_2_9_TESTS_STATUS_SHOWN TRUE PARENT_SCOPE)
     endif()
 
     if (TARGET HWLOC::hwloc_2 AND NOT HWLOC_2_TESTS_STATUS_SHOWN)
@@ -267,22 +267,22 @@ function(tbb_add_tbbbind_test)
     endif()
 
     list(APPEND HWLOC_TEST_CASES
-        hwloc_2_4
+        hwloc_2_9
         hwloc_2
         hwloc_1_11
-        hwloc_2_4_hwloc_2
-        hwloc_2_4_hwloc_1_11
+        hwloc_2_9_hwloc_2
+        hwloc_2_9_hwloc_1_11
         hwloc_2_hwloc_1_11
-        hwloc_2_4_hwloc_2_hwloc_1_11
+        hwloc_2_9_hwloc_2_hwloc_1_11
     )
 
-    list(APPEND HWLOC_TEST_CASE_0_VARS tbbbind_2_4 "hwloc_2_4")
+    list(APPEND HWLOC_TEST_CASE_0_VARS tbbbind_2_5 "hwloc_2_9")
     list(APPEND HWLOC_TEST_CASE_1_VARS tbbbind_2   "hwloc_2")
     list(APPEND HWLOC_TEST_CASE_2_VARS tbbbind     "hwloc_1_11")
-    list(APPEND HWLOC_TEST_CASE_3_VARS tbbbind_2_4 "hwloc_2_4,hwloc_2")
-    list(APPEND HWLOC_TEST_CASE_4_VARS tbbbind_2_4 "hwloc_2_4,hwloc_1_11")
+    list(APPEND HWLOC_TEST_CASE_3_VARS tbbbind_2_5 "hwloc_2_9,hwloc_2")
+    list(APPEND HWLOC_TEST_CASE_4_VARS tbbbind_2_5 "hwloc_2_9,hwloc_1_11")
     list(APPEND HWLOC_TEST_CASE_5_VARS tbbbind_2   "hwloc_2,hwloc_1_11")
-    list(APPEND HWLOC_TEST_CASE_6_VARS tbbbind_2_4 "hwloc_2_4,hwloc_2,hwloc_1_11")
+    list(APPEND HWLOC_TEST_CASE_6_VARS tbbbind_2_5 "hwloc_2_9,hwloc_2,hwloc_1_11")
 
     foreach(TEST_CASE ${HWLOC_TEST_CASES})
         list(FIND HWLOC_TEST_CASES ${TEST_CASE} TEST_CASE_INDEX)
@@ -303,7 +303,7 @@ endfunction()
 # Copy libraries to test folder to make it visible during tests execution if external TBB is tested.
 # TODO: check and update for multi-config generators.
 if (TBB_FOUND)
-    list(APPEND _tbb_test_components tbb tbbmalloc tbbmalloc_proxy tbbbind tbbbind_2_0 tbbbind_2_4)
+    list(APPEND _tbb_test_components tbb tbbmalloc tbbmalloc_proxy tbbbind tbbbind_2_0 tbbbind_2_5)
     foreach(_component ${_tbb_test_components})
         if (TARGET TBB::${_component})
             get_property(${_component}_lib_file_location TARGET TBB::${_component} PROPERTY LOCATION)
@@ -562,6 +562,6 @@ if (NOT "${CMAKE_SYSTEM_PROCESSOR}" MATCHES "(armv7-a|aarch64|mips|arm64)")
     tbb_add_test(SUBDIR tbbmalloc NAME test_malloc_new_handler DEPENDENCIES TBB::tbbmalloc_proxy)
 endif()
 
-unset(HWLOC_2_4_TESTS_STATUS_SHOWN)
+unset(HWLOC_2_9_TESTS_STATUS_SHOWN)
 unset(HWLOC_2_TESTS_STATUS_SHOWN)
 unset(HWLOC_1_11_TESTS_STATUS_SHOWN)
