{
    "initialize": {
        "Singular": [
            {
                "name" : "GlobalConfigParams",
                "_comment" : "Stores common params accross multiple passes. Access through the Computation Model.",
                "recorded_model": false,
                "verbose": "Debug",
                "weights_form": "None",
                "barrier_index_assignment" : "Dynamic",
                "Number_of_DPUs" : 1,
                "Number_of_Clusters" : 1,
                "UpaShaves": 1,
                "DDRScratch": 16777216,
                "MemoryHack": false,
                "nWorkloads": 1,
                "ActivationSparsity": false,
                "WeightsSparsity": false,
                "CMX_memory_overflow_safety_factor" : 0.925,
                "mpe_mode" : "Vector",
                "cmx": 917504,

                "split_strategy" :
                [
                    {
                        "name_filter": ".*",
                        "strategy": "Clustering"
                    }
                ],
                "default_tensor_placement" : "DDR",
                "streaming_strategy" :
                [
                    {
                        "name_filter" : "model/re_lu/Relu#34",
                        "splits" : [ {"H" : 4} ]
                    },
                    {
                        "name_filter" : "model/max_pooling2d/MaxPool#35",
                        "splits" : [ {"H" : 4} ]
                    },
                    {
                        "name_filter" : "model/re_lu_1/Relu#36",
                        "splits" : [ {"H" : 4} ]
                    },
                    {
                        "name_filter" : "model/max_pooling2d_1/MaxPool#37",
                        "splits" : [ {"H" : 2} ]
                    },
                    {
                        "name_filter" : "model/re_lu_2/Relu#38",
                        "splits" : [ {"H" : 2} ]
                    },
                    {
                        "name_filter" : "model/re_lu_5/Relu#44",
                        "splits" : [ {"K" : 2} ]
                    },
                    {
                        "name_filter" : "model/re_lu_6/Relu#46",
                        "splits" : [ {"K" : 8} ]
                    },
                    {
                        "name_filter" : "model/re_lu_7/Relu#47",
                        "splits" : [ {"K" : 16} ]
                    },
                    {
                        "name_filter" : "Det/act_quant/FakeQuantWithMinMaxVars#48",
                        "splits" : [ {"K" : 2} ]
                    },
                    {
                        "name_filter" : "conv1#34",
                        "splits" : [ {"H" : 4} ]
                    },
                    {
                        "name_filter" : "pool1/max_pool#35",
                        "splits" : [ {"H" : 4} ]
                    },
                    {
                        "name_filter" : "conv2#36",
                        "splits" : [ {"H" : 2} ]
                    },
                    {
                        "name_filter" : "conv3#38",
            {
                "name": "TensorGraphColoring",
                "cmxOutput": "output/dots/nnCmx.dot",
                "heapOutput": "output/dots/nnHeap.dot"
            },
            {
                "name": "ConvertDot",
                "input": "output/dots/nnCmx.dot"
            },
            {
                "name": "ConvertDot",
                "input": "output/dots/nnHeap.dot"
            },
            "RemoveDeallocationTasks",
            {
                "name": "GenerateDot",
                "output": "output/dots/DeallocationTasksRemoved.dot",
                "scope": "ControlModel",
                "content": "full",
                "html": true
            },
            {
                "name": "ConvertDot",
                "input": "output/dots/DeallocationTasksRemoved.dot"
            },
            "TransitiveReduction",
            {
                "name": "GenerateDot",
                "output": "output/dots/DeallocationTasksRemovedAndTransitiveReduction.dot",
                "scope": "ControlModel",
                "content": "full",
                "html": true
            },
            {
                "name": "ConvertDot",
                "input": "output/dots/DeallocationTasksRemovedAndTransitiveReduction.dot"
            },
            {
                "name" : "InsertBarrierTasks",
                "outputBIG": "output/dots/BarrierInterferenceGraph.dot",
                "barrier_reuse_window" : 0
            },
            {
                "name": "GenerateDot",
                "output": "output/dots/BarriersInserted.dot",
                "scope": "ControlModel",
                "content": "full",
                "html": true
            },
            {
                "name": "ConvertDot",
                "input": "output/dots/BarriersInserted.dot"
            },
            "TransitiveReduction",
            {
                "name": "GenerateDot",
                "output": "output/dots/BarriersInsertedTransitiveReductionApplied.dot",
                "scope": "ControlModel",
                "content": "full",
                "html": true
            },
            {
                "name": "ConvertDot",
                "input": "output/dots/BarriersInsertedTransitiveReductionApplied.dot"
            },
            "PopulateWeightsTablesPointers",
            {
                "name": "GenerateDot",
                "output": "output/dots/final_model.dot",
                "scope": "ControlModel",
                "content": "full",
                "html": true
            },
            {
                "name": "ConvertDot",
                "input": "output/dots/final_model.dot"
            }
        ]
    },
    "scheduling": {
        "Singular": [
            "StoreBarriersNamesInTasks",
            "GenerateExecutionSchedule",
            "CorrectExecutionSchedule",
            "BarrierIndexAssignment",
            "UpdateBarrierRefs",
            {
                "name": "GenerateDot",
                "output": "output/dots/serial_model.dot",
                "scope": "ControlModel",
                "content": "full",
                "html": true
            },
            {
                "name": "ConvertDot",
                "input": "output/dots/serial_model.dot"
            }
        ]
    },
    "validate": {
        "Singular": [
            "CheckTensors"
        ]
    },
    "serialize": {
        "Singular": [
            {
                "name": "GenerateBlobKeembay",
                "output": "output/tiny-yolo-streaming.blob"
            },
            {
                "name": "ConvertFlatbuffer",
                "input": "output/tiny-yolo-streaming.blob"
            }

        ]
    },
    "root": {
        "Singular": [
            "initialize",
            "validate",
            "adapt",
            "keembay_adapt",
            "dma",
            "control_flows",
            "finalize",
            "scheduling",
            "serialize"
        ]
    }
}
