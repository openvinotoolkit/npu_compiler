{
    "initialize": {
        "Singular": [
            {
                "name" : "GlobalConfigParams",
                "_comment" : "Stores common params accross multiple passes. Access through the Computation Model.",
                "recorded_model": false,
                "weights_form": "None",
                "barrier_index_assignment" : "Static",
                "Number_of_DPUs" : 5,
                "Number_of_Clusters" : 1,
                "UpaShaves": 1,
                "DDRScratch": 4096,
                "MemoryHack": true,
                "CMX_memory_overflow_safety_factor" : 0.925,
                "nWorkloads" : 5,
                "MPE_mode" : "Matrix",
                "split_strategy" :
                [
                    {
                        "name_filter" : ".*",
                        "cluster_filter" : 0,
                        "strategy" : "SplitOverK"
                    },
                    {
                        "name_filter" : ".*",
                        "cluster_filter" : 1,
                        "strategy" : "Clustering"
                    },
                    {
                        "name_filter" : ".*input.*",
                        "cluster_filter" : 0,
                        "strategy" : "SplitOverH"
                    },
                    {
                        "name_filter" : ".*res2a.*",
                        "cluster_filter" : 0,
                        "strategy" : "SplitOverH"
                    },
                    {
                        "name_filter" : ".*conv1.*",
                        "cluster_filter" : 0,
                        "strategy" : "SplitOverH"
                    },
                    {
                        "name_filter" : ".*pool1.*",
                        "cluster_filter" : 0,
                        "strategy" : "SplitOverH"
                    },
                    {
                        "name_filter" : ".*res2.*",
                        "cluster_filter" : 0,
                        "strategy" : "SplitOverH"
                    },
                    {
                        "name_filter" : ".*res3.*",
                        "cluster_filter" : 0,
                        "strategy" : "SplitOverH"
                    }
                ],
                "workload_strategy" :
                [
                    {
                        "name_filter" : "res1",
                        "cluster_filter" : 0,
                        "nWorkloads" : 45,
                        "mpe_mode" : "Matrix"
                    },
                    {
                        "name_filter" : "res2a_branch2a",
                        "cluster_filter" : 0,
                        "nWorkloads" : 45,
                        "mpe_mode" : "Matrix"
                    },
                    {
                        "name_filter" : "res2a_branch2b",
                        "cluster_filter" : 0,
                        "nWorkloads" : 49,
                        "mpe_mode" : "Matrix"
                    },
                    {
                        "name_filter" : "res2a_branch2c",
                        "cluster_filter" : 0,
                        "nWorkloads" : 49,
                        "mpe_mode" : "Matrix"
                    },
                    {
                        "name_filter" : "res3a_branch2c",
                        "cluster_filter" : 0,
                        "nWorkloads" : 49,
                        "mpe_mode" : "Matrix"
                    },
                    {
                        "name_filter" : "res4a_branch2a",
                        "cluster_filter" : 0,
                        "nWorkloads" : 8,
                        "mpe_mode" : "Vector"
                    },
                    {
                        "name_filter" : "res4a_branch2b",
                        "cluster_filter" : 0,
                        "nWorkloads" : 8,
                        "mpe_mode" : "Vector"
                    },
                    {
                        "name_filter" : "res4a_branch2b_alt",
                        "cluster_filter" : 0,
                        "nWorkloads" : 8,
                        "mpe_mode" : "Vector"
                    },
                    {
                        "name_filter" : "res5a_branch2a",
                        "cluster_filter" : 0,
                        "nWorkloads" : 4,
                        "mpe_mode" : "Matrix"
                    },
                    {
                        "name_filter" : "res5c_branch2a",
                        "cluster_filter" : 0,
                        "nWorkloads" : 4,
                        "mpe_mode" : "Matrix"
                    },
                    {
                        "name_filter" : "res5c_branch2b",
                        "cluster_filter" : 0,
                        "nWorkloads" : 4,
                        "mpe_mode" : "Matrix"
                    },
                    {
                        "name_filter" : "res5c_branch2c",
                        "cluster_filter" : 0,
                        "nWorkloads" : 4,
                        "mpe_mode" : "Matrix"
                    }
                ]
            },
            "ComputeMemory",
            "AssignUniqueOpId",
            {
                "name": "GenerateDot",
                "output": "original_model.dot",
                "scope": "OpControlModel",
                "content": "full",
                "html": true,
                "convert": true
            },
            {
                "name": "CreateSourceStructure",
                "VersionMajor": 3,
                "VersionMinor": 10,
                "VersionHash": "c1b3a9075e52694726edc996124c04b9268cf4cf"
            }
        ]
    },
    "adapt": {
        "Singular": [
            "AverageAsDepthWise",
            "FuseBatchNorm",
            "FuseBias",
            "FuseRelu",
            "FuseScale",
            {
                "name": "GenerateDot",
                "output": "adapt_model.dot",
                "scope": "OpControlModel",
                "content": "full",
                "html": true,
                "convert": true
            }
        ]
    },
    "keembay_adapt": {
        "Singular": [
            "StoreLayerSplitStrategy",
            "StoreWorkloadStrategy",
            "ConvertOpsToTasks",
            "ComputeTensorsQuantParams",
            "KMBOrderConversion",
            "AlignTaskWeights",
            "GenerateSparsityMaps",
            {
                "name": "GenerateDot",
                "output": "keembay_adapt_model.dot",
                "scope": "OpControlModel",
                "content": "full",
                "html": true,
                "convert": true
            },
            "GenerateWeightsTables",
            {
                "name": "GenerateDot",
                "output": "keembay_WeightsTable_model.dot",
                "scope": "OpControlModel",
                "content": "full",
                "html": true,
                "convert": true
            },
            "GenerateEltWiseConstants",
            {
                "name": "GenerateDot",
                "output": "keembay_EltWiseConstants_model.dot",
                "scope": "OpControlModel",
                "content": "full",
                "html": true,
                "convert": true
            }
        ]
    },
    "dma": {
        "Singular" : [
            {
                "name":"AddDMATasks",
                "weights_prefetch": 2
            },
            "AddFinalDMATask",
            {
                "name": "GenerateDot",
                "output": "dma_model.dot",
                "scope": "OpControlModel",
                "content": "full",
                "html": true,
                "convert": true
            },
            "AddDeallocationTasks",
            {
                "name": "GenerateDot",
                "output": "deallocation_model_data.dot",
                "scope": "OpModel",
                "content": "full",
                "html": true,
                "convert": true
            },
            {
                "name": "GenerateDot",
                "output": "deallocation_model_control.dot",
                "scope": "ControlModel",
                "content": "full",
                "html": true,
                "convert": true
            }
        ]
    },
    "control_flows":{
        "Singular" : [
            "DmaControlFlows",
            {
                "name": "GenerateDot",
                "output": "DmaControlFlows_model.dot",
                "scope": "ControlModel",
                "content": "full",
                "html": true,
                "convert": true
            },
            "InputOutputControlFlows",
            {
                "name": "GenerateDot",
                "output": "InputOutputControlFlows_model.dot",
                "scope": "ControlModel",
                "content": "full",
                "html": true,
                "convert": true
            },
            {
                "name": "TransitiveReduction",
                "filter": "PositiveMemory"
            },
            {
                "name": "GenerateDot",
                "output": "TransitiveReduction.dot",
                "scope": "ControlModel",
                "content": "full",
                "html": true,
                "convert": true
            }
        ]
    },
    "finalize": {
        "Singular": [
            "MaxTopologicalCutAndPartialSerialisation",
            {
                "name": "GenerateDot",
                "output": "MaxTopologicalCutAndPartialSerialisation.dot",
                "scope": "ControlModel",
                "content": "full",
                "html": true,
                "convert": true
            },
            {
                "name": "GenerateWorkloads",
                "costfunction": "criticalpath",
                "TensorSplitAlgorithms": "Metis",
                "_comment": "Supported CostFunctions are: balanced | criticalpath | minmax | greedy. Supported TensorSplitAlgorithms are Metis, Rectangle, Z-Tiling"
            },

            "ArrangeKeembayExecution",
            {
                "name": "TransitiveReduction",
                "filter": "PositiveMemory"
            },
            "AllocateInputOutputTensorsKeemBay",
            "AllocatePopulatedTensorsKeemBay",
            "AllocateUnpopulatedTensorsKeemBay",
            "TensorGraphColoring",
            "PopulateWeightsTables",
            "RemoveDeallocationTasks",
            {
                "name": "TransitiveReduction",
                "filter": "PositiveMemory"
            },
            {
                "name" : "InsertBarrierTasks",
                "barrier_reuse_window" : 0
            },
            "AddBarrierRefs",
            "UpdateBarrierProducerConsumerCounts",
            {
                "name": "GenerateDot",
                "output": "final_model.dot",
                "scope": "OpControlModel",
                "content": "full",
                "html": true,
                "convert": true
            }
        ]
    },
    "validate": {
        "Singular": [
            "CheckTensors"
        ]
    },
    "serialize": {
        "Singular": [
            {
                "name": "GenerateBlobKeembay",
                "output": "output/vpu2.blob"
            }
        ]
    },
    "root": {
        "Singular": [
            "initialize",
            "validate",
            "adapt",
            "keembay_adapt",
            "dma",
            "control_flows",
            "finalize",
            "serialize"
        ],
        "Recurrent": [
            "validate"
        ]
    }
}
